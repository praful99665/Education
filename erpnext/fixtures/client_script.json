[
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "singleform",
  "enabled": 0,
  "modified": "2024-01-06 14:35:01.141094",
  "module": null,
  "name": "singleform_clientscript",
  "script": "frappe.ui.form.on('singleform', {\n        onload: function(frm) {\n        // Update the time field every second\n        setInterval(function() {\n            frm.set_value('newtime', frappe.datetime.now_time(true));\n        }, 1000); // 1000 milliseconds = 1 second\n        },\n\trefresh(frm) {\n\t            var currentDate = frappe.datetime.nowdate();\n\t            var currentTime = frappe.datetime.now_time(true);\n\t            \n\t            \n        frm.set_value('newdate', currentDate);\n        frm.set_value('newtime',currentTime);\n\t    \n\t    \n\t},\n\t\n\t\n// \t###################################\n\t\n\t\n\t checked(frm){\n\t    if(frm.doc.checked)\n\t        {\n            frm.set_value('currentaddress',frm.doc.permanentaddress)\n            frm.set_value('c_place',frm.doc.place)\n            frm.set_value('c_city',frm.doc.city)\n            frm.set_value('c_street',frm.doc.street)\n            frm.set_value('c_pin',frm.doc.pin)\n\t       \n\t        }\n\t        else {\n                 frm.set_value('currentaddress')\n                 frm.set_value('c_place')\n                 frm.set_value('c_city')\n                 frm.set_value('c_street')\n                 frm.set_value('c_pin')\n                 \n\t        }\n},\n// #####################################\n\n\n\n\n\n\n\nsecondno(frm) {\n        var a=frm.doc.firstno\n        var b=frm.doc.secondno\n        var e= (a+b)\n        frm.set_value('ans',e);\n        \n        \n    },\n    \n\n\n\t\n\n})\n\n\n//     'firstno'(frm) {\n//         SetResult(frm);\n//     },\n\n//     'secondno'(frm) {\n//         SetResult(frm);\n//     }\n// });\n\n// function SetResult(frm) {\n//     var number1 = frm.doc.firstno || 0;\n//     var number2 = frm.doc.secondno|| 0;\n//     var result = number1 + number2;\n\n\n//     frm.set_value('ans', result);\n// }\n\n\n\n\n\n\n\n\n// })\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "child for students",
  "enabled": 0,
  "modified": "2024-01-06 14:35:23.448103",
  "module": null,
  "name": "child for student",
  "script": "frappe.ui.form.on('child for students', {\n\trefresh(frm) {\n\t    \n\t},\n\theight(frm){\n\t    frm.set_value('weight',frm.doc.height)\n\t    \n\t}\n\t\n})",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "feed_back",
  "enabled": 0,
  "modified": "2024-01-06 14:36:00.658436",
  "module": null,
  "name": "feedback",
  "script": "frappe.ui.form.on('feed_back', {\n\trefresh(frm) {\n\t    \n\tfrm.add_custom_button('user' ,function() {\n\n\t    frappe.prompt([\n\t        \n\t    {\n        fieldname:'firstname',\n        label:'firstname',\n        fieldtype:'Data',\n        reqd:1,\n        \n        },\n\t        \n\t       \n        {\n        fieldname:'lastname',\n        label:'lastname',\n        fieldtype:'Data'\n        \n        },\n        \n        {\n        fieldname:'dob',\n        label:'DOB',\n        fieldtype:'Date'\n        \n        },\n        \n        {\n        fieldname:'age',\n        label:'AGE',\n        fieldtype:'Data'\n        \n        },\n        \n        {\n        fieldname:'gender',\n        label:'gender',\n        fieldtype:'Select',\n        options:'Male\\nFemale\\n',\n        \n        },\n        \n\t    ],\n\t    \n\t    function(praful){\n\t   \n\t   \n\t       \n\t        frm.set_value('firstname',praful.firstname)\n            frm.set_value('lastname',praful.lastname)\n            frm.set_value('dob',praful.dob)\n            frm.set_value('age',praful.age)\n            frm.set_value('gender',praful.gender)\n            \n            \n        }  \n\t    )    \n\t        \n\t        \n\t        \n\t        \n\t    }).addClass('btn-primary')\n\t}, \n\n\t    check(frm)\n\t    {\n\t    if(frm.doc.check)\n\t        {\n            \n            frm.set_value('place1',frm.doc.place)\n            frm.set_value('address1',frm.doc.address)\n\t       \n\t        }\n\t        else {\n                 frm.set_value('address1')\n                 frm.set_value('place1')\n                \n                 \n\t        }\n\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "feedback_purchase",
  "enabled": 0,
  "modified": "2024-01-06 14:36:40.607747",
  "module": null,
  "name": "feedback_purchase_clientscript",
  "script": "frappe.ui.form.on('feedback_purchase', {\n\t    before_submit: async (frm) => {\n        let prompt = new Promise((resolve, reject) => {\n            frappe.confirm(\n                'Are you sure?',\n                () => resolve(),\n                () => reject()\n            );\n        });\n        await prompt.then(\n            () => frappe.show_alert(\"Submitted\", 3), \n            () => {\n                frappe.validated = false;\n                frappe.show_alert(\"Not submitted\", 3)\n            }\n        );\n    }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "form_customer",
  "enabled": 0,
  "modified": "2023-09-26 09:37:33.567153",
  "module": null,
  "name": "client_form_customer",
  "script": "// // frappe.ui.form.on('form_customer', {\n\n// //     refresh: function(frm) {\n// //         // Add a custom button to trigger the dialog\n// //         frm.add_custom_button('user', function() {\n// //             // Open the dialog and handle its submission\n// //             frappe.prompt([\n// //                 {\n// //                     label: 'firstname',\n// //                     fieldname: 'firstname',\n// //                     fieldtype: 'Data',\n                    \n// //                 },\n// //                 {\n// //                     label: 'lastname',\n// //                     fieldname: 'lastname',\n// //                     fieldtype: 'Data',\n                    \n// //                 },\n// //                 {\n// //                     label: 'dob',\n// //                     fieldname: 'dob',\n// //                     fieldtype: 'Date',\n                    \n// //                 },\n// //                 {\n// //                     label: 'email',\n// //                     fieldname: 'email',\n// //                     fieldtype: 'Data',\n                    \n// //                 },\n// //                 {\n// //                     label: 'phone',\n// //                     fieldname: 'phone',\n// //                     fieldtype: 'phone',\n                    \n// //                 },\n                \n                \n                \n                \n                \n                \n                \n// //             ], function(values) {\n// //                 // Create a new document of the target doctype\n// //                 var newDoc = frappe.new_doc('doc_form_customer');\n// //                 // Set the values from the dialog\n// //                 newDoc.firstname = values.firstname;\n// //                 newDoc.lastname = values.lastname;\n// //                 newDoc.dob = values.dob;\n// //                 newDoc.email = values.email;\n// //                 newDoc.phone = values.phone;\n// //                 // Save the new document\n// //                 newDoc.save();\n// //             }, 'Create New Document');\n// //         });\n// //     },\n// // });\n\n\n// // ...................................\n\n// // frappe.ui.form.on('form_customer', {\n// //     refresh(frm) {\n// //         frm.add_custom_button('Create and Fetch to doc_form_customer', function() {\n// //             frappe.prompt([\n// //                 {\n// //                     fieldname: 'firstname',\n// //                     label: 'First Name',\n// //                     fieldtype: 'Data',\n// //                     reqd: 1,\n// //                 },\n// //                 {\n// //                     fieldname: 'lastname',\n// //                     label: 'Last Name',\n// //                     fieldtype: 'Data',\n// //                 },\n// //                 {\n// //                     fieldname: 'dob',\n// //                     label: 'DOB',\n// //                     fieldtype: 'Date',\n// //                 },\n// //                 {\n// //                     fieldname: 'gender',\n// //                     label: 'Gender',\n// //                     fieldtype: 'Select',\n// //                     options: 'Male\\nFemale',\n// //                 },\n// //                 {\n// //                     fieldname: 'email',\n// //                     label: 'Email',\n// //                     fieldtype: 'Data',\n// //                 },\n// //                 {\n// //                     fieldname: 'phone',\n// //                     label: 'Phone',\n// //                     fieldtype: 'Data',\n// //                 },\n// //             ], function(values) {\n// //                 // Create a new 'doc_form_customer' document\n// //                 var newDoc = frappe.new_doc('doc_form_customer');\n// //                 newDoc.firstname = values.firstname;\n// //                 newDoc.lastname = values.lastname;\n// //                 newDoc.dob = values.dob;\n// //                 newDoc.gender = values.gender;\n// //                 newDoc.email = values.email;\n// //                 newDoc.phone = values.phone;\n\n// //                 // Insert the new 'doc_form_customer' document\n// //                 frappe.db.insert(newDoc).then(function(response) {\n// //                     if (response.exc) {\n// //                         frappe.msgprint('Error creating doc_form_customer: ' + response.exc);\n// //                     } else {\n// //                         frappe.msgprint('doc_form_customer created successfully.');\n\n// //                         // Fetch the data into the current 'doc_form_customer' document\n// //                         frm.set_value('field_to_fetch_firstname', values.firstname);\n// //                         frm.set_value('field_to_fetch_lastname', values.lastname);\n// //                         frm.set_value('field_to_fetch_dob', values.dob);\n// //                         frm.set_value('field_to_fetch_gender', values.gender);\n// //                         frm.set_value('field_to_fetch_email', values.email);\n// //                         frm.set_value('field_to_fetch_phone', values.phone);\n\n// //                         frm.refresh(); // Refresh the form to see the fetched data\n// //                     }\n// //                 });\n// //             });\n// //         }).addClass('btn-primary');\n// //     },\n// // });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// // ...................................................................\n\n// // frappe.ui.form.on('form_customer', {\n// //     refresh(frm) {\n// //         frm.add_custom_button('Create doc_form_customer', function() {\n// //             frappe.prompt([\n// //                 {\n// //                     fieldname: 'firstname',\n// //                     label: 'First Name',\n// //                     fieldtype: 'Data',\n// //                     reqd: 1,\n// //                 },\n// //                 {\n// //                     fieldname: 'lastname',\n// //                     label: 'Last Name',\n// //                     fieldtype: 'Data',\n// //                 },\n// //                 {\n// //                     fieldname: 'dob',\n// //                     label: 'DOB',\n// //                     fieldtype: 'Date',\n// //                 },\n// //               \n// //                 {\n// //                     fieldname: 'email',\n// //                     label: 'Email',\n// //                     fieldtype: 'Data',\n// //                 },\n// //                 {\n// //                     fieldname: 'phone',\n// //                     label: 'Phone',\n// //                     fieldtype: 'phone',\n// //                 },\n// //             ], function(values) {\n// //                 var newDoc = frappe.new_doc('doc_form_customer');\n// //                 newDoc.firstname = values.firstname;\n// //                 newDoc.lastname = values.lastname;\n// //                 newDoc.dob = values.dob;\n// //                 newDoc.email = values.email;\n// //                 newDoc.phone = values.phone;\n\n// //                 // Insert the new 'doc_form_customer' document\n// //                 frappe.db.insert(newDoc).then(function() {\n// //                     frm.reload_doc(); // Refresh the original form\n// //                 });\n// //             });\n// //         }).addClass('btn-primary');\n// //     },\n// // });\n\n            \n\n\n\n\n\n// // // ...............................................\n\n// frappe.ui.form.on('form_customer', \n// {\n// \trefresh(frm) \n// \t{\n\t    \n// \tfrm.add_custom_button('user' ,function() {\n\t    \n\t    \n\t    \n// \t            var newDoc=    frappe.new_doc('doc_form_customer');\n\t                \n\t                \n\t               // frappe.model.save(newDoc).then(function(doc) {\n\t                \n// \t                 newDoc.firstname = 'Value1';\n//             newDoc.lastname = 'Value2';\n//             // Add more field assignments as needed\n\n//             // Save the new document\n//             // newDoc.save().then(function(doc) {\n//             frappe.model.save(newDoc).then(function(doc) {\n//                 frappe.msgprint(__('New document created with name: {0}'));\n//                 // Optionally, you can reload or redirect to the newly created document\n//             });\n        \n// \t})\n// \t}\n// \t});\n\n// // \t    frappe.prompt([\n\t        \n// // \t    {\n// //         fieldname:'firstname',\n// //         label:'firstname',\n// //         fieldtype:'Data',\n// //         reqd:1,\n        \n// //         },\n\t        \n\t       \n// //         {\n// //         fieldname:'lastname',\n// //         label:'lastname',\n// //         fieldtype:'Data'\n        \n// //         },\n        \n// //         {\n// //         fieldname:'dob',\n// //         label:'DOB',\n// //         fieldtype:'Date'\n        \n// //         },\n        \n        \n// //         {\n// //         fieldname:'gender',\n// //         label:'gender',\n// //         fieldtype:'Select',\n// //         options:'Male\\nFemale\\n',\n        \n// //         },\n        \n// //         {\n// //         fieldname:'email',\n// //         label:'email',\n// //         fieldtype:'Data'\n        \n// //         },\n        \n// //         {\n// //         fieldname:'phone',\n// //         label:'phone',\n// //         fieldtype:'Phone'\n        \n// //         },\n// //          ],\n// // // \t}).addClass('btn-primary');\n\t    \n// \t   // function(values)\n// \t   // {\n// \t       //           msgprint(\"hi\")\n\n// \t       // console.log(values,\"11111111111111\")\n// \t       //   var newDoc = frappe.new_doc(\n//         // {  \n//         //   'doctype':'doc_form_customer',\n//         //   'firstname': \"praful\",\n//         //   'lastname' : \"hbh\",\n//         //   'dob'      : \"23/09/2000\",\n//         //   'email'    :\"jsj\",\n//         //   'phone'    :\"344\",\n//         // //  frm.doc.firstname, \n//         //  frm.doc.lastname,\n//         //  frm.doc.dob,\n//         //  frm.doc.email,\n//         //  frm.doc.phone\n//         // \n\t       \n// \t   //})\n//         // frm.set_value('firstname',frm.doc.firstname)\n//         // frappe.db.insert(newDoc)\n//         // frm.save()\n//         // newDoc.insert()\n// // \t})\n// // \t}\n// // })\n// \t   // })\n// // \t}).addClass('btn-primary');\n// // \t}\n// // })\n     \n     \n     \n     \n         \n// \t       // frm.set_value('firstname',values.firstname)\n//         //     frm.set_value('lastname',values.lastname)\n//         //     frm.set_value('dob',values.dob)\n//         //     frm.set_value('gender',values.gender)\n//         //     frm.set_value('email',values.email)\n        \n//           // frappe.model.with_doctype('fetched_doc', function() {\n       \n     \n     \n     \n     \n     \n     \n     \n     \n     \n     \n//             // newDoc.firstname = frm.set_value('firstname',values.firstname);\n//             // newDoc.lastname = frm.set_value('lastname',values.lastname);\n           \n            \n            \n            \n//           /*  newDoc.firstname = values.firstname;\n//             newDoc.lastname = values.lastname;\n//             newDoc.dob = values.dob;\n//             newDoc.gender = values.gender;\n//             newDoc.email = values.email;\n            \n//                             frappe.db.insert(newDoc).then(function() {\n//                     frm.reload_doc(); // Refresh the original form\n//                 });\n//             });\n//         }).addClass('btn-primary');\n//     },\n// });\n//         */\n        \n        \n        \n        \n        \n// //                         frappe.db.insert(newDoc).then(function() {\n// //                         frappe.db.insert(newDoc);\n// //             });\n// // \t    });\n// //         }).addClass('btn-primary');\n// //     },\n// // });\n\n\n            \n            \n            \n            \n            \n            \n            \n// //             newDoc.db.insert();\n\n \n// //                             // frappe.ui.form.save().then(function() {\n// //                             // frappe.msgprint(__('New document created successfully.'));\n// //                             // frm.reload_doc(); // Refresh the original form\n// //                         }\n// //                     )\n\n// //         }).addClass('btn-primary');\n// //     }\n// // });\n            \n            \n            \n            \n            \n// // frappe.ui.form.on('form_customer', {\n// //     refresh(frm) {\n// //         frm.add_custom_button('user', function() {\n// //             // Create a new document of type 'doc_form_customer'\n// //             var newDoc = frappe.new_doc({\n// //                 'doctype': 'doc_form_customer',\n// //                 'firstname': frm.doc.firstname,\n// //                 'lastname': frm.doc.lastname,\n// //                 'dob': frm.doc.dob,\n// //                 'email': frm.doc.email,\n// //                 'phone': frm.doc.phone\n// //             });\n\n// //             // Set the 'firstname' field in the current form to its current value (this seems redundant)\n// //             frm.set_value('firstname', frm.doc.firstname);\n// // console.log(newDoc)\n// //             // Insert the new document into the database\n// //             frappe.db.insert(newDoc);\n// //         });\n// //     }\n// // })\n\n\t\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "task1",
  "enabled": 0,
  "modified": "2024-01-06 14:37:20.966106",
  "module": null,
  "name": "task1_clientscript",
  "script": "frappe.ui.form.on('task1', {\n// \trefresh(frm)\n// \t{\n\t    \n// frm.set_df_property('address','hidden',true)\n\t    \n\t\n\tcheck(frm)\n\t{\n\t    frm.set_df_property('place','hidden',true)\n\n\t}\n\t\n\t})\n\t\n// \t})\n// \t    check(frm)\n// \t    {\n// \t    if(frm.doc.check)\n// \t        { \n// \t       // frm.toggle_display(['address','place','city','street'],false)\n\t       \n\t        \n// \t       //frm.set_df_property(['address','place','city'],true)\n// \t       frm.set_df_property('address','hidden',true)\n// \t        }\n// \t       // else\n// \t       // {\n\t            \n// \t       // }\n// \t        }\n\t        \n// \t}\n\t\n\t\n// })",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "form_customer",
  "enabled": 0,
  "modified": "2024-01-06 14:37:51.585877",
  "module": null,
  "name": "formcustomerclientscript",
  "script": "// frappe.ui.form.on('form_customer', {\n// \trefresh(frm) {\n// \t            frm.add_custom_button('user', function() {\n//             frappe.prompt([\n//                 {\n//                     label: 'firstname',\n//                     fieldname: 'firstname',\n//                     fieldtype: 'Data',\n                    \n//                 },\n//                 {\n//                     label: 'lastname',\n//                     fieldname: 'lastname',\n//                     fieldtype: 'Data',\n                    \n//                 }\n                \n//                 ],\n                \n//                 function(values){\n//                     var newDoc=frappe.model_get_new_doc(\"doc_form_customer\")\n//                     newDoc.firstname=values.firstname\n//                      newDoc.lastname=values.lastname\n                    \n                \n                \n//                 frappe.db.insert(newDoc)\n//                 },\"details\",'submit')\n// \t            })\n// \t}\n// });\n                \n                frappe.ui.form.on('form_customer', {\n    refresh(frm) {\n        frm.add_custom_button('Create User', function () {\n            frappe.prompt([\n                {\n                    label: 'First Name',\n                    fieldname: 'firstname',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'Last Name',\n                    fieldname: 'lastname',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'E-mail',\n                    fieldname: 'email',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'Phone',\n                    fieldname: 'phone',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'DOB',\n                    fieldname: 'dob',\n                    fieldtype: 'Date',\n                }\n                \n            ], function (values) {\n                var newDoc = frappe.model.get_new_doc(\"doc_form_customer\"); // Replace 'Your_DocType_Name' with the correct doctype name\n                newDoc.firstname = values.firstname;\n                newDoc.lastname = values.lastname;\n                newDoc.email=values.email;\n                newDoc.phone=values.phone;\n                newDoc.dob=values.dob;\n\n                frappe.db.insert(newDoc).then((response) => {\n                    if (!response.exc) {\n                        frappe.msgprint('User created successfully.');\n                        frm.reload_doc();\n                    } else {\n                        frappe.msgprint('Error creating user: ' + response.exc);\n                    }\n                });\n            }, 'Enter User Details', 'Submit');\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "webeaz",
  "enabled": 0,
  "modified": "2024-01-06 14:38:06.590421",
  "module": null,
  "name": "webeaz_clientscript",
  "script": "frappe.ui.form.on('webeaz', {\n    event: function(frm) {\n        frappe.call({\n    method: 'frappe.client.get_list',\n    args: {\n        doctype: 'webeaz_event', // Specify the name of the DocType you want to fetch from\n        filters: { \"name\":frm.doc.event},\n            \n        fields:[\"description2\",\"name\"] // Specify the name of the field you want to retrieve\n    },\n    callback: function(response) {\n        if (response && response.message) {\n            console.log(response);\n            \n            // Do something with the fetched value\n             cur_frm.set_value('description',response.message[0].description2);\n            console.log(response.message.description);\n        }\n    }\n});\n\n\n    }\n});\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ................................................................................\n\n\n// frappe.ui.form.on('webeaz', {\n// event: function (frm) {\n\n//         // Get the value of the linked field (webeaz_clientscript)\n//         var linkedField = frm.doc.linked_fieldname; // Replace with the actual fieldname\n\n//         // Use frappe.call to fetch data from linked doctype\n//         frappe.call({\n//             method: 'frappe.client.get_value',\n//             args: {\n//                 doctype: 'webeaz_clientscript', // Linked doctype\n//                 filters: { 'name': linkedField }, // Filter by linked field value\n//                 fieldname: 'your_desired_field' // Replace with the desired fieldname to fetch\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     // Populate the fetched data into the 'event' field of your original doctype\n//                     frm.doc.event = response.message.your_desired_field;\n//                     frm.refresh_field('event');\n//                 } else {\n//                     frappe.msgprint('Error fetching data from linked doctype.');\n//                 }\n//             }\n//         });\n//     }\n// });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "school",
  "enabled": 0,
  "modified": "2024-01-06 14:55:46.152753",
  "module": null,
  "name": "client_school",
  "script": "frappe.ui.form.on('school', {\n\trefresh(frm) {\n\t       //var user_email = frappe.session.user;\n        // if (user_email === 'prafulprasanth@gmail.com') {\n        if(frappe.user.has_role('Admin'))\n        {\n            \n            frm.add_custom_button('Create user', function () {\n                frappe.prompt([\n                {\n                    label: 'Age',\n                    fieldname: 'age1',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'Gender',\n                    fieldname: 'gender1',\n                    fieldtype: 'Select',\n                    options: 'Male\\nFemale\\n',\n                },\n                \n                {\n                    label: 'Phone',\n                    fieldname: 'phone1',\n                    fieldtype: 'Data',\n                },\n                \n                \n            ], function (values) {\n                // var child_school = frm.doc.child_school; // Access the child table\n                // console.log( values);\n\n                // Create a new row in the child table and set field values\n                var new_row = frappe.model.add_child(frm.doc, 'child_school');\n                console.log( values);\n                \n                new_row.age = values.age1;\n                new_row.gender = values.gender1;\n                new_row.phone = values.phone1;\n                //  frm.save();\n                \n                console.log(frm.doc.child_school);\n                \n                frm.refresh_field('child_school');\n            });\n            }).addClass('btn-primary'); \n            }n\n\n            if (frappe.user.has_role(manager)) \n            {\n            frm.add_custom_button('Create user 2', function () {\n                \n                \n                        frappe.prompt([\n                {\n                    label: 'Age',\n                    fieldname: 'age',\n                    fieldtype: 'Data',\n                },\n                {\n                    label: 'Gender',\n                    fieldname: 'gender',\n                    fieldtype: 'Select',\n                    options: 'Male\\nFemale\\n',\n                },\n                \n                {\n                    label: 'Phone',\n                    fieldname: 'phone',\n                    fieldtype: 'Data',\n                },\n                \n                \n            ],\n                function (values) {\n                console.log( values);\n                var child_school = frm.doc.child_school; // Access the child table\n\n                // Create a new row in the child table and set field values\n                var new_row = frappe.model.add_child(frm.doc, 'child_school');\n                new_row.age = values.age;\n                new_row.gender = values.gender;\n                new_row.phone = values.phone;\n                //  frm.save();\n                \n                console.log(frm.doc.child_school);\n                \n                frm.refresh_field('child_school');   \n            });\n\n\n\n            }).css({'background-color': 'gold', 'color': 'black'});\n        }\n    }\n});\n\n// ................................................................................\n\n        // frm.add_custom_button('Create User', function () {\n        //     frappe.prompt([\n        //         {\n        //             label: 'Age',\n        //             fieldname: 'age',\n        //             fieldtype: 'Data',\n        //         },\n        //         {\n        //             label: 'Gender',\n        //             fieldname: 'gender',\n        //             fieldtype: 'Select',\n        //             options: 'Male\\nFemale\\n',\n        //         },\n                \n        //         {\n        //             label: 'Phone',\n        //             fieldname: 'phone',\n        //             fieldtype: 'Data',\n        //         },\n                \n                \n        //     ], function (values) {\n        //         console.log( values);\n        //         var child_school = frm.doc.child_school; // Access the child table\n\n        //         // Create a new row in the child table and set field values\n        //         var new_row = frappe.model.add_child(frm.doc, 'child_school');\n        //         new_row.age = values.age;\n        //         new_row.gender = values.gender;\n        //         new_row.phone = values.phone;\n        //          frm.save();\n                \n        //         console.log(frm.doc.child_school);\n                \n        //         frm.refresh_field('child_school');\n            \n          \n        //     });\n        // }).addClass('btn-primary'); \n// ................................................\n        \n     \n//         frm.add_custom_button('Create User 2', function () {\n//             frappe.prompt([\n//                 {\n//                     label: 'Age',\n//                     fieldname: 'age',\n//                     fieldtype: 'Data',\n//                 },\n//                 {\n//                     label: 'Gender',\n//                     fieldname: 'gender',\n//                     fieldtype: 'Select',\n//                     options: 'Male\\nFemale\\n',\n//                 },\n                \n//                 {\n//                     label: 'Phone',\n//                     fieldname: 'phone',\n//                     fieldtype: 'Data',\n//                 },\n                \n                \n//             ], function (values) {\n//                 console.log( values);\n//                 var child_school = frm.doc.child_school; // Access the child table\n\n//                 // Create a new row in the child table and set field values\n//                 var new_row = frappe.model.add_child(frm.doc, 'child_school');\n//                 new_row.age = values.age;\n//                 new_row.gender = values.gender;\n//                 new_row.phone = values.phone;\n//                  frm.save();\n                \n//                 console.log(frm.doc.child_school);\n                \n//                 frm.refresh_field('child_school');   \n//             });\n//         }).css({'background-color': 'gold', 'color': 'black'});\n     \n        \n        \n        \n// \t}\n// });\n\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "school",
  "enabled": 0,
  "modified": "2024-01-08 15:44:28.500522",
  "module": null,
  "name": "client_2school",
  "script": "// frappe.ui.form.on('school', {\n//     refresh(frm) {\n//         var user_email = frappe.session.user;\n//         if (user_email === 'prafulprasanth@gmail.com') {\n//             frm.add_custom_button('Create user', function () {\n//                 msgprint('ok');\n\n//                 frappe.prompt([\n//                     {\n//                         label: 'Age',\n//                         fieldname: 'age1',\n//                         fieldtype: 'Data',\n//                     },\n//                     {\n//                         label: 'Gender',\n//                         fieldname: 'gender1',\n//                         fieldtype: 'Select',\n//                         options: 'Male\\nFemale\\n',\n//                     },\n//                     {\n//                         label: 'Phone',\n//                         fieldname: 'phone1',\n//                         fieldtype: 'Data',\n//                     },\n//                     {\n//                         label: 'Employee',\n//                         fieldname: 'employee1',\n//                         fieldtype: 'Link',\n//                         options: 'Employee',\n//                         get_query: function () {\n//                             return {\n//                                 filters: [\n//                                     ['Employee', 'name', '=', 'HR-EMP-00024']\n//                                 ]\n//                             };\n//                         },\n                        \n//                         // onchange event to automatically populate Employee Address and Last Name\n//                         onchange: function () {\n//                             var selectedEmployee = frm.doc.employee1;\n//                             console.log(selectedEmployee)\n                            \n//                             if (selectedEmployee) {\n//                                 frappe.call({\n//                                     method: 'frappe.client.get_value',\n//                                     args: {\n//                                         doctype: 'Employee',\n//                                         fieldname: ['custom_address', 'last_name'],\n//                                         filters: { name: selectedEmployee },\n//                                     },\n//                                     callback: function (response) {\n//                                         var employeeData = response.message;\n//                                         console.log(employeeData)\n//                                         if (employeeData) {\n                                            \n//                                             // Set the fetched data in the respective fields\n//                                             frm.doc.address = employeeData.custom_address;\n//                                             frm.doc.last_name = employeeData.last_name;\n//                                             frm.refresh_field('address');\n//                                             frm.refresh_field('last_name');\n//                                         }\n//                                     },\n//                                 });\n//                             }\n//                         },\n                        \n//                     },\n//                     {\n//                         label: 'Employee Address',\n//                         fieldname: 'address',\n//                         fieldtype: 'Data',\n//                     },\n//                     {\n//                         label: 'Last Name',\n//                         fieldname: 'last_name',\n//                         fieldtype: 'Data',\n//                     },\n//                 ], function (values) {\n//                     var new_row = frappe.model.add_child(frm.doc, 'child_school');\n//                     new_row.age = values.age1;\n//                     new_row.gender = values.gender1;\n//                     new_row.phone = values.phone1;\n//                     new_row.emp = values.employee1;\n//                     new_row.address = values.address;\n//                     new_row.lastname = values.last_name;\n                    \n                    \n//                     frm.save();\n\n//                     frm.refresh_field('child_school');\n//                 });\n//             }).addClass('btn-primary');\n//         }\n//     }\n// });\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "travel",
  "enabled": 0,
  "modified": "2024-01-06 14:39:31.701157",
  "module": "HR",
  "name": "travel_1",
  "script": "frappe.ui.form.on('travel', {\n\trefresh(frm) {\n\t\t\n\tfrm.add_custom_button('user' ,function() {\n\n\t    frappe.prompt([\n\t        \n\t    {\n        fieldname:'firstname',\n        label:'firstname',\n        fieldtype:'Data',\n        reqd:1,\n        \n        },\n\t        \n\t       \n        {\n        fieldname:'lastname',\n        label:'lastname',\n        fieldtype:'Data'\n        \n        },\n        \n        {\n        fieldname:'dateofbirth',\n        label:'dateofbirth',\n        fieldtype:'Date',\n        \n        },\n        \n        {\n        fieldname:'gender',\n        label:'gender',\n        fieldtype:'Select',\n        options:'male\\nfemale\\n'\n        \n        },\n        \n\t    ],\n\t    \n\t    function data(values){\n\t        frappe.call({\n\t            method:'methodapi',\n\t            args:{\n\t                a1:values.firstname,\n\t                a2:values.lastname,\n\t                a3:values.gender,\n\t                a4:values.dateofbirth\n\t                \n\t            },\n\t            \n\t                callback: function(response) {\n        var result = response.message;\n        console.log('Result: ' + result);\n        // Handle the result here\n    },\n    error: function(xhr, textStatus, errorThrown) {\n        // Handle errors here\n        console.error('Error: ' + errorThrown);\n    }\n});\n\t   \n        });\n\t        \n  \n\t    }).addClass('btn-danger');\n\t\t\n\t}\n});",
  "view": "Form"
 },
 {
  "_liked_by": "[]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "add",
  "enabled": 0,
  "modified": "2024-01-06 14:39:43.160031",
  "module": null,
  "name": "a+s_client",
  "script": "frappe.ui.form.on('add', {\n\trefresh(frm) {\n\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "leo",
  "enabled": 0,
  "modified": "2024-01-06 14:39:53.716041",
  "module": "HR",
  "name": "leo1",
  "script": "frappe.ui.form.on('leo', {\n\n    refresh: function(frm) {\n        // Add a custom button to trigger the dialog\n        frm.add_custom_button('done', function() {\n            // Open the dialog and handle its submission\n            frappe.prompt([\n               \n                \n                {\n                    label: 'firstname',\n                    fieldname: 'firstname',\n                    fieldtype: 'Data'\n                    \n                },\n                {\n                    label: 'lastname',\n                    fieldname: 'secondname',\n                    fieldtype: 'Data'\n                    \n                },\n                {\n                    label: 'dob',\n                    fieldname: 'dob',\n                    fieldtype: 'Date'\n                    \n                },\n                {\n                    label: 'age',\n                    fieldname: 'age',\n                    fieldtype: 'Date'\n                    \n                },\n                {\n                    label: 'address',\n                    fieldname: 'address',\n                    fieldtype: 'Data'\n                    \n                },\n                {\n                    label: 'phone',\n                    fieldname: 'phone',\n                    fieldtype: 'Data'\n                    \n                },\n                \n                \n        \n                \n            ], function(praful) {\n                \n         \n\t   \n\t   \n\t       \n\t        frm.set_value('firstname',praful.firstname)\n            frm.set_value('secondname',praful.secondname)\n            frm.set_value('dob',praful.dob)\n            frm.set_value('age',praful.age)\n            frm.set_value('phone',praful.phone)\n            frm.set_value(\"address\",praful.address)\n            \n        }  \n  \n            );\n        });\n\n        \n        frm.add_custom_button('API' ,function() {\n\n\t    frappe.prompt([\n\t        \n\t        {\n                    label: 'personid',\n                    fieldname: 'personid',\n                    fieldtype: 'Link',\n                    options:'Employee'\n                    \n                },\n\t        \n\t    {\n        fieldname:'firstname',\n        label:'firstname',\n        fieldtype:'Data',\n        reqd:1,\n        \n        },\n\t        \n\t       \n        {\n        fieldname:'lastname',\n        label:'lastname',\n        fieldtype:'Data'\n        \n        },\n        \n        {\n        fieldname:'dateofbirth',\n        label:'dateofbirth',\n        fieldtype:'Date',\n        \n        },\n        \n        {\n        fieldname:'gender',\n        label:'gender',\n        fieldtype:'Select',\n        options:'male\\nfemale\\n'\n        \n        },\n        \n\t    ],\n\t    \n\t    function data(values){\n\t        frappe.call({\n\t            method:'newAPImethod',\n\t            args:{\n\t                A0:values.personid,\n\t                A1:values.firstname,\n\t                A2:values.lastname,\n\t                A4:values.dateofbirth,\n\t                A3:values.gender\n\t             \n\t                \n\t            },\n\t            \n\t                callback: function(response) {\n        var result = response.message;\n        console.log('Result: ' + result);\n        // Handle the result here\n    },\n    error: function(xhr, textStatus, errorThrown) {\n        // Handle errors here\n        console.error('Error: ' + errorThrown);\n    }\n});\n\t   \n        });\n\t        \n  \n\t    }).addClass('btn-primary');\n        \n    },\n    \n                // no2(frm){\n                // var a=frm.doc.no1;\n                // var b=frm.doc.no2;\n                // var c=a+b;\n                // frm.set_value('ans',c);\n                // }\n    \n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "leo",
  "enabled": 0,
  "modified": "2023-10-10 13:07:55.777762",
  "module": null,
  "name": "leo_1",
  "script": "frappe.ui.form.on('leo', {\n\trefresh(frm) {\n\tvar\ta=frm.doc.no1;\n\tvar\tb=frm.doc.no2;\n\tfrm.set_value('ans',a+b);\n// \tvar\tc=no1+no2;\n// \t\tans=c\n\t}\n// \t    onload(frm){\n\t    \n\t\n// \taa=no1,\n// \t\tbb=no2,\n// \t\tcc=no1+no2,\n// \t\tsumm=cc\n// }\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Arithmatic",
  "enabled": 0,
  "modified": "2023-10-11 10:09:36.664027",
  "module": null,
  "name": "Arith",
  "script": "frappe.ui.form.on('Arithmatic', {\n\trefresh(frm) {\n\tvar a=frm.doc.number1\n    var b=frm.doc.number2\n    var s=a+b\n\n    frm.doc.set_value('sum',s)\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student",
  "enabled": 0,
  "modified": "2024-01-29 17:55:40.108259",
  "module": "Education",
  "name": "student_client",
  "script": "frappe.ui.form.on('Student', {\n    refresh: function(frm) {\n        \n    },\n\n    first_name: function(frm) {\n        updateFullName(frm);\n    },\n\n    middle_name: function(frm) {\n        updateFullName(frm);\n    },\n\n    last_name: function(frm) {\n        updateFullName(frm);\n    }\n});\n\nfunction updateFullName(frm) {\n    var first = frm.doc.first_name || \"\";\n    var middle = frm.doc.middle_name || \"\";\n    var last = frm.doc.last_name || \"\";\n\n    // Generate a random number between 1 and 1000\n    var randomNum = 'STD-' + Math.floor(Math.random() * 1000);\n\n    var full_name = first;\n\n    if (middle) {\n        full_name += \" \" + middle;\n    }\n\n    full_name += \" \" + last;\n\n    frm.set_value('custom_student_full_name_', full_name.trim());\n    // Add the random number to the full name\n    full_name += \" - \" + randomNum;\n\n    frm.set_value('custom_full_name', full_name.trim());\n}\n\n// ...........................................\n// frappe.ui.form.on('Student', {\n//     refresh: function(frm) {\n        \n//     },\n\n//     first_name: function(frm) {\n//         updateFullName(frm);\n//     },\n\n//     middle_name: function(frm) {\n//         updateFullName(frm);\n//     },\n\n//     last_name: function(frm) {\n//         updateFullName(frm);\n//     }\n// });\n\n// function updateFullName(frm) {\n//     var first = frm.doc.first_name || \"\";\n//     var middle = frm.doc.middle_name || \"\";\n//     var last = frm.doc.last_name || \"\";\n\n//     var full_name = first;\n\n//     if (middle) {\n//         full_name += \" \" + middle;\n//     }\n\n//     full_name += \" \" + last;\n\n//     frm.set_value('custom_full_name', full_name.trim());\n// }\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Attendance",
  "enabled": 1,
  "modified": "2023-12-05 11:59:59.077282",
  "module": "Education",
  "name": "student_group_setting",
  "script": "frappe.ui.form.on('Student Attendance', {\n\n    // refresh: function(frm) {\n    student_name(frm){\n        var studentName = frm.doc.student_name;\n    //   console.log(studentName)\n        frappe.call({\n            method: 'attandancee',\n            args: {\n                doctype: 'Student Group',\n                name1:studentName\n\n            },\n            callback: function(response) {\n                        var response_s=JSON.parse(response._server_messages);\n \n                        var x = JSON.parse(response_s[0]);\n                        // console.log(x.message); \n                        \n                        var M = x.message;\n                        console.log(M); \n                        frm.set_value('student_group',M);\n                }\n            });\n    }\n    });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Attendance",
  "enabled": 1,
  "modified": "2023-11-13 15:49:50.445488",
  "module": "Education",
  "name": "setting_course_schedule",
  "script": "frappe.ui.form.on('Student Attendance', {\n\tdate(frm) {\n\t   var D=frm.doc.date\n\t   var G=frm.doc.student_group\n\t   var Name = frm.doc.student_name\n\t   if (Name){\n\t   frappe.call({\n    method: 'frappe.client.get_list',\n    args: {\n        doctype:'Course Schedule',\n            filters: {\n        schedule_date: D,\n        student_group: G,\n        // add more filters as needed\n    }\n \n    },\n   \n    callback: function(response) {\n        console.log(response)\n        var value = response.message[0]\n        \n        var schedule=value.name\n        console.log(schedule)\n        frm.set_value('course_schedule',schedule)\n        \n        \n    }\n});\n}\n    else{\n        frappe.msgprint('Please Enter Name First')\n    }\n\n\n\t}\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Course Status",
  "enabled": 0,
  "modified": "2023-12-21 18:15:56.847676",
  "module": "Education",
  "name": "course_status",
  "script": "frappe.ui.form.on('Course Status', {\n    student_group: function(frm) {\n        // Clear existing rows in the topic_table\n        frm.clear_table('topic_table');\n\n        var studentGroup = frm.doc.student_group;\n\n        // Check if student_group is selected\n        if (studentGroup) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Student Group',\n                    name: studentGroup\n                },\n                callback: function(response) {\n                    var studentGroupDoc = response.message;\n\n                    // Make the student_group field readonly\n                    frm.set_df_property('student_group', 'read_only', 1);\n\n                    frappe.call({\n                        method: 'frappe.client.get',\n                        args: {\n                            doctype: 'Program',\n                            name: studentGroupDoc.program\n                        },\n                        callback: function(progResponse) {\n                            var programDoc = progResponse.message;\n                            var courseList = programDoc.courses;\n\n                            for (var i = 0; i < courseList.length; i++) {\n                                frappe.call({\n                                    method: 'frappe.client.get',\n                                    args: {\n                                        doctype: 'Course',\n                                        name: courseList[i].course_name\n                                    },\n                                    callback: function(courseResponse) {\n                                        var courseDoc = courseResponse.message;\n                                        var topicsList = courseDoc.topics;\n\n                                        topicsList.forEach(function(t) {\n                                            var row = frappe.model.add_child(frm.doc, 'Topics_c', 'topic_table');\n                                            row.topics_name = t.topic;\n                                            row.topics_full_name = t.topic;\n                                        });\n\n                                        // Refresh the field to display the updated child table\n                                        frm.refresh_field('topic_table');\n                                    }\n                                });\n                            }\n                        }\n                    });\n                }\n            });\n        } else {\n            // If student_group is not selected, make the field writable\n            frm.set_df_property('student_group', 'read_only', 0);\n        }\n    }\n});\n\n\n// ...........................................................\n// frappe.ui.form.on('Course Status', {\n// \tstudent_group(frm) {\n// \t    frappe.model.clear_table(frm.doc, 'topic_table');\n//         frm.refresh_field('topic_table');\n        \n//       var  studentGroup = frm.doc.student_group\n\n// \t\tfrappe.call({\n// \t\t    method:'frappe.client.get',\n// \t\t    args : {\n// \t\t        doctype : 'Student Group',\n// \t\t        name : studentGroup\n// \t\t            },\n// \t\t    callback : function (response){\n// \t\t        var g = response.message;\n// \t\t        console.log(g.program);\n\t\t        \n// \t\t frappe.call({\n// \t\t     method : 'frappe.client.get',\n// \t\t     args :{\n// \t\t         doctype : 'Program',\n// \t\t         name : g.program\n// \t\t           },\n// \t\t    callback : function (response){\n// \t\t        var prog = response.message;\n// \t\t        console.log(prog.courses);\n// \t\t        var pc = prog.courses ;\n// \t\t        for(var i = 0 ;i < pc.length;i++){\n// \t\t            console.log(pc[i].course_name);\n\t\t            \n//             \t\t  frappe.call({\n//             \t\t      method : 'frappe.client.get',\n//             \t\t      args : {\n//             \t\t          doctype: 'Course',\n//             \t\t          name : pc[i].course_name\n//             \t\t      },\n            \t\t      \n//             callback : function (response){\n//             \tvar C = response.message;\n//             \tconsole.log(C.topics)\n//             var\tnum = C.topics\n            \n//             // \tfor (let i = 0; i < C.topics.length; i++){\n//             \t   // console.log(C.topics[i].topic)\n//             \t   // topic_list.push(C.topics[i].topic)\n            \t   \n//             \t   //frm.clear_table('topic_table'); // Clear the table before adding new rows\n//             \t    num.forEach(function (t){\n//             \t        var row = frappe.model.add_child(frm.doc,'Topics_c','topic_table')\n//             \t        row.topics_name = t.topic\n//             \t        row.topics_full_name = t.topic\n//             \t    });\n//             \t    frm.refresh_field('topic_table'); // Refresh the field to display the updated child table\n            \t    \n            \t    \n            \t    \n            \t    \n//             \t}\n\t\t      \n//             \t\t  //}\n// \t\t  })\n// \t\t      }\n// \t\t  },\n// \t\t        });\n\t\t        \n// \t\t    }\n\t\t     \n// \t\t });\n// \t}\n// });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Course Status",
  "enabled": 1,
  "modified": "2024-01-19 18:18:44.254177",
  "module": "Education",
  "name": "check_count",
  "script": "frappe.ui.form.on('Topics_c', {\n    completion: function(frm, cdt, cdn) {\n        var topicTable = frm.doc.topic_table;\n        var doc = locals[cdt][cdn];\n\n        if (doc.completion && !doc.t_date) {\n            // Set today's date in the 't_date' field for the unchecked checkbox row\n            frappe.model.set_value(cdt, cdn, 't_date', frappe.datetime.nowdate());\n        } else if (!doc.completion && doc.t_date) {\n            // Reset the 't_date' field only if it is not already set\n            frappe.model.set_value(cdt, cdn, 't_date', null);\n        }\n\n        // Calculate the completion percentage and update the 'percent' field (your existing code)\n        var totalCheckboxes = topicTable.length;\n        var checkedCount = topicTable.filter(row => row.completion).length;\n        var percentage = (checkedCount / totalCheckboxes) * 100;\n\n        if (percentage === 0) {\n            frm.set_value('percent', 'Not Started');\n        } else if (percentage === 100) {\n            frm.set_value('percent', 'Successfully Completed');\n        } else {\n            frm.set_value('percent', percentage.toFixed(1) + '%');\n        }\n\n        // Logging information in the console (your existing code)\n        console.log('Total Checkboxes:', totalCheckboxes);\n        console.log('Checked Count:', checkedCount);\n        console.log('Percent:', frm.doc.percent);\n\n        // Save the form (your existing code)\n        frm.save();\n    }\n});\n\n// .......................................\n\n// ..............................................\n// frappe.ui.form.on('Topics_c', {\n//     completion: function(frm, cdt, cdn) {\n//         var topicTable = frm.doc.topic_table;\n//         var totalCheckboxes = topicTable.length;\n//         var checkedCount = topicTable.filter(row => row.completion).length;\n\n//         var percentage = (checkedCount / totalCheckboxes) * 100;\n\n//         if (percentage === 0) {\n//             frm.set_value('percent', 'Not Started');\n//         } else if (percentage === 100) {\n//             frm.set_value('percent', 'Successfully Completed');\n//         } else {\n//             // Display the percentage with a single decimal place and '%' symbol\n//             frm.set_value('percent', percentage.toFixed(1) + '%');\n//         }\n\n//         console.log('Total Checkboxes:', totalCheckboxes);\n//         console.log('Checked Count:', checkedCount);\n//         console.log('Percent:', frm.doc.percent);\n\n//         // Set today's date in the 't_date' field for the ticked checkbox row\n//         topicTable.forEach(row => {\n//             if (row.completion) {\n//                 frappe.model.set_value(row.doctype, row.name, 't_date', frappe.datetime.nowdate());\n//             } else {\n//                 // Reset the 't_date' field when the checkbox is unchecked\n//                 frappe.model.set_value(row.doctype, row.name, 't_date', null);\n//             }\n//         });\n\n//         frm.save();\n//     }\n// });\n\n\n// ...................................................\n// frappe.ui.form.on('Topics_c', {\n//     completion: function(frm, cdt, cdn) {\n//         var topicTable = frm.doc.topic_table;\n//         var totalCheckboxes = topicTable.length;\n//         var checkedCount = topicTable.filter(row => row.completion).length;\n\n//         var percentage = (checkedCount / totalCheckboxes) * 100;\n\n//         if (percentage === 0) {\n//             frm.set_value('percent', 'Not Started');\n//         } else if (percentage === 100) {\n//             frm.set_value('percent', 'Successfully Completed');\n//         } else {\n//             frm.set_value('percent', percentage);\n//         }\n\n//         console.log('Total Checkboxes:', totalCheckboxes);\n//         console.log('Checked Count:', checkedCount);\n//         console.log('Percent:', frm.doc.percent);\n\n//         // Set today's date in the 't_date' field for the ticked checkbox row\n//         topicTable.forEach(row => {\n//             if (row.completion) {\n//                 frappe.model.set_value(row.doctype, row.name, 't_date', frappe.datetime.nowdate());\n//             }\n//             else {\n//                 // Reset the 't_date' field when the checkbox is unchecked\n//                 frappe.model.set_value(row.doctype, row.name, 't_date', null);\n//             }\n\n//         });\n//         frm.save()\n//     }\n    \n// });\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Instructor",
  "enabled": 1,
  "modified": "2023-12-07 10:53:42.162235",
  "module": "Education",
  "name": "ins_schedule",
  "script": "frappe.ui.form.on('Instructor', {\n    custom_schedule: function(frm) {\n        if (frm.doc.custom_schedule == true) {\n            frappe.model.clear_table(frm.doc, 'custom_schedules');\n            var instructorName = frm.doc.instructor_name;\n\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: 'Course Schedule',\n                    filters: {\n                        'instructor_name': instructorName\n                    },\n                    order_by: 'schedule_date asc'\n                },\n                callback: function(response) {\n                    var courseSchedules = response.message;\n                    console.log(courseSchedules);\n\n                    if (courseSchedules && courseSchedules.length > 0) {\n                        var scheduleArray = [];\n\n                        courseSchedules.forEach(function(schedule) {\n                            frappe.call({\n                                method: 'frappe.client.get',\n                                args: {\n                                    doctype: 'Course Schedule',\n                                    order_by: 'schedule_date desc',\n                                    name: schedule.name,\n                                },\n                                callback: function(response) {\n                                    var scheduleRecord = response.message;\n                                    console.log(scheduleRecord);\n\n                                    if (scheduleRecord) {\n                                        scheduleArray.push({\n                                            crs: scheduleRecord.course,\n                                            sg: scheduleRecord.student_group,\n                                            d: scheduleRecord.schedule_date,\n                                            st: scheduleRecord.from_time,\n                                            et: scheduleRecord.to_time\n                                        });\n\n                                        // Check if all schedules are processed before saving\n                                        if (scheduleArray.length === courseSchedules.length) {\n                                            // Sort the array by schedule date\n                                            scheduleArray.sort((a, b) => new Date(a.d) - new Date(b.d));\n\n                                            // Add the sorted data to the child table\n                                            scheduleArray.forEach(function(item) {\n                                                var row = frappe.model.add_child(frm.doc, 'custom_schedules');\n                                                row.crs = item.crs;\n                                                row.sg = item.sg;\n                                                row.d = item.d;\n                                                row.st = item.st;\n                                                row.et = item.et;\n                                            });\n\n                                            // Refresh the child table field\n                                            frm.refresh_field('custom_schedules');\n\n                                            // Save the document after adding all child records\n                                            frm.save();\n                                        }\n                                    } else {\n                                        frappe.msgprint(\"Error fetching schedule details\");\n                                    }\n                                }\n                            });\n                        });\n                    } else {\n                        frappe.msgprint(\"No Schedules\");\n                    }\n                }\n            });\n        } else {\n            frappe.model.clear_table(frm.doc, 'custom_schedules');\n\n            // Save the document only if it is marked as unsaved\n            if (frm.doc.__unsaved) {\n                frm.save();\n            }\n        }\n    }\n});\n\n// ........................................................................................\n\n// frappe.ui.form.on('Instructor', {\n//     custom_schedule: function(frm) {\n//         if (frm.doc.custom_schedule == true) {\n//             frappe.model.clear_table(frm.doc, 'custom_schedules');\n//             var instructorName = frm.doc.instructor_name;\n\n//             frappe.call({\n//                 method: 'frappe.client.get_list',\n//                 args: {\n//                     doctype: 'Course Schedule',\n//                     filters: {\n//                         'instructor_name': instructorName\n//                     },\n//                     order_by: 'schedule_date asc'\n//                 },\n//                 callback: function(response) {\n//                     var courseSchedules = response.message;\n//                     console.log(courseSchedules);\n\n//                     if (courseSchedules && courseSchedules.length > 0) {\n//                         var schedulesProcessed = 0;\n\n//                         courseSchedules.forEach(function(schedule) {\n//                             frappe.call({\n//                                 method: 'frappe.client.get',\n//                                 args: {\n//                                     doctype: 'Course Schedule',\n//                                     order_by: 'schedule_date desc',\n//                                     name: schedule.name,\n//                                 },\n//                                 callback: function(response) {\n//                                     var scheduleRecord = response.message;\n//                                     console.log(scheduleRecord);\n\n//                                     if (scheduleRecord) {\n//                                         var row = frappe.model.add_child(frm.doc, 'custom_schedules');\n//                                         row.crs = scheduleRecord.course;\n//                                         row.sg = scheduleRecord.student_group;\n//                                         row.d = scheduleRecord.schedule_date;\n//                                         row.st = scheduleRecord.from_time;\n//                                         row.et = scheduleRecord.to_time;\n//                                         frm.refresh_field('custom_schedules');\n\n//                                         // Check if all schedules are processed before saving\n//                                         schedulesProcessed++;\n//                                         if (schedulesProcessed === courseSchedules.length) {\n//                                             // Save the document after adding all child records\n//                                             frm.save();\n//                                         }\n//                                     } else {\n//                                         frappe.msgprint(\"Error fetching schedule details\");\n//                                     }\n//                                 }\n//                             });\n//                         });\n//                     } else {\n//                         frappe.msgprint(\"No Schedules\");\n//                     }\n//                 }\n//             });\n//         } else {\n//             frappe.model.clear_table(frm.doc, 'custom_schedules');\n\n//             // Save the document only if it is marked as unsaved\n//             if (frm.doc.__unsaved) {\n//                 frm.save();\n//             }\n//         }\n//     }\n// });\n\n// ....................................................................\n\n// // frappe.ui.form.on('Instructor', {\n// // \tcustom_show_schedules(frm) {\n\n// //     frappe.model.clear_table(frm.doc,'custom_schedules')\n// // \t var  ins_name = frm.doc.instructor_name\n// // \t console.log(ins_name)\n// // \t frappe.call({\n// // \t     method : 'frappe.client.get_list',\n// // \t     args:{\n// // \t         doctype:'Course Schedule',\n// // \t         filters:{\n// // \t             'instructor_name':ins_name\n// // \t         },\n// // \t        order_by:'schedule_date asc' \n\t         \n// // \t     },\n// // \t     callback:function (response){\n// // \t         var B = response.message;\n// // \t         console.log(B)\n// // \t         if (B)\n// // \t         {\n// // \t         B.forEach(function(t){\n// // \t           //  console.log(t.name)\n// // \t          var sh_name= t.name\n// // \t          console.log(sh_name)\n// // \t             frappe.call({\n// // \t                 method: 'frappe.client.get',\n// // \t                 args:{\n// // \t                     doctype:'Course Schedule',\n// // \t                     order_by:'schedule_date dsc',\n// // \t                     name:sh_name,\n// // \t                 },\n// // \t                 callback:function(response){\n// //                       var S = response.message;\n// //                       console.log(S)\n// //                       var row = frappe.model.add_child(frm.doc,'custom_schedules');\n// //                       row.crs = S.course;\n// //                       row.sg = S.student_group;\n// //                       row.d = S.schedule_date\n// //                       row.st = S.from_time\n// //                       row.et = S.to_time\n// //                       row.save()\n// //                       doc.save()\n// //                       frm.refresh_field('custom_schedules');\n                       \t \n// // \t                 }\n// // \t             });\n// // \t         })\n// // \t         }\n// //             else\n// //             {\n// //                 frappe.msgprint(\"No Schedules\");\n// //             }\n// // }\n// // })\n// // }\n// // })\n// ..........................................",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Course Status",
  "enabled": 1,
  "modified": "2024-01-06 16:58:25.744000",
  "module": "Education",
  "name": "hinding_button_course_status",
  "script": "// frappe.listview_settings['Course Status'] = {\n//     refresh: function(listview) {\n//         // Check if the user has the 'HR Manager' role\n//         if (frappe.user.has_role('HR Manager')) {\n//             // If the user has the 'HR Manager' role, hide the 'Create' button\n//             listview.page.clear_primary_action();\n//         }\n//     }\n// };\n// ....................................................\nfrappe.listview_settings['Course Status'] = {\n    refresh: function(listview) {\n        // Check if the user has the 'HR Manager' role\n        if (frappe.user.has_role('HR Manager')) {\n            // If the user has the 'HR Manager' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n\n        // Check if the user has the 'Student' role\n        if (frappe.user.has_role('Student')) {\n            // If the user has the 'Student' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n\n        // Check if the user has the 'Instructor' role\n        if (frappe.user.has_role('Instructor')) {\n            // If the user has the 'Instructor' role, perform specific actions\n            console.log('User is an Instructor');\n        }\n    }\n};\n\n\n\n// ...................................................\n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Total Unpaid Students",
  "enabled": 1,
  "modified": "2024-01-06 17:00:58.107810",
  "module": "Education",
  "name": "hiding_button_total_unpaid_students",
  "script": "\nfrappe.listview_settings['Total Unpaid Students'] = {\n    refresh: function(listview) {\n        // Check if the user has the 'HR Manager' role\n        if (frappe.user.has_role('HR Manager')) {\n            // If the user has the 'HR Manager' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n        \n        if (frappe.user.has_role('Student')) {\n            // If the user has the 'Student' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n\n        // Check if the user has the 'Instructor' role\n        if (frappe.user.has_role('Instructor')) {\n            // If the user has the 'Instructor' role, perform specific actions\n            console.log('User is an Instructor');\n        }\n    }\n};\n\n        \n        ",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Time Table",
  "enabled": 1,
  "modified": "2024-01-06 17:01:19.332507",
  "module": "Education",
  "name": "hiding_button_student_Time_table",
  "script": "\nfrappe.listview_settings['Student Time Table'] = {\n    refresh: function(listview) {\n        // Check if the user has the 'HR Manager' role\n        if (frappe.user.has_role('HR Manager')) {\n            // If the user has the 'HR Manager' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n        \n        if (frappe.user.has_role('Student')) {\n            // If the user has the 'Student' role, hide the 'Create' button\n            listview.page.clear_primary_action();\n        }\n\n        // Check if the user has the 'Instructor' role\n        if (frappe.user.has_role('Instructor')) {\n            // If the user has the 'Instructor' role, perform specific actions\n            console.log('User is an Instructor');\n        }\n    }\n};\n\n        \n",
  "view": "List"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Fees",
  "enabled": 1,
  "modified": "2024-01-10 12:39:36.664576",
  "module": "Education",
  "name": "Fees Automation",
  "script": "frappe.ui.form.on('Fees', {\n    program_enrollment: function(frm) {\n        var program_enroll = frm.doc.program_enrollment;\n        console.log(program_enroll);\n\n        if (program_enroll) {\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'Program Enrollment',\n                    filters: {\n                        'name': program_enroll\n                    }\n                },\n                callback: function(response) {\n                    console.log(response.message);\n                    if (response.message) {\n                        var Academic_year = response.message.academic_year;\n                        var Batch = response.message.student_batch_name;\n\n                        console.log(Academic_year);\n                        console.log(Batch);\n\n                        // Set the values in the form\n                        frm.set_value('academic_year', Academic_year);\n                        frm.set_value('custom_batch', Batch);\n\n                        // Calculate due_date as today + 10 days\n                        var today = frappe.datetime.nowdate();\n                        var due_date = frappe.datetime.add_days(today, 10);\n                        \n                        // Set the due_date field\n                        frm.set_value('due_date', due_date);\n                    } else {\n                        console.log(\"Program Enrollment not found\");\n                    }\n                }\n            });\n        } else {\n            console.log(\"Program Enrollment is empty\");\n        }\n    }\n});\n\n\n\n\n\n\n\n// ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;\n// frappe.ui.form.on('Fees', {\n//     program_enrollment: function(frm) {\n//         var program_enroll = frm.doc.program_enrollment;\n//         console.log(program_enroll);\n\n//         if (program_enroll) {\n//             frappe.call({\n//                 method: 'frappe.client.get',\n//                 args: {\n//                     doctype: 'Program Enrollment',\n//                     filters: {\n//                         'name': program_enroll\n//                     }\n//                 },\n//                 callback: function(response) {\n//                     console.log(response.message);\n//                     if (response.message) {\n//                         var Academic_year = response.message.academic_year;\n//                         var Batch = response.message.student_batch_name;\n\n//                         console.log(Academic_year);\n//                         console.log(Batch);\n\n//                         // Set the values in the form\n//                         frm.set_value('academic_year', Academic_year);\n//                         frm.set_value('custom_batch', Batch);\n                        \n                        \n                        \n                        \n//                     } else {\n//                         console.log(\"Prrogram enroll not found\");\n//                     }\n//                 }\n//             });\n//         }\n//         else {\n//             console.log(\"Program Enrollment is empty\");\n//         }\n//     }\n// });\n\n\n\n\n// ......................................\n// frappe.ui.form.on('Fees', {\n// \tprogram_enrollment(frm) {\n// \t    var program_enroll = frm.doc.program_enrollment;\n// \t    console.log(program_enroll);\n//         if (program_enroll){\n// \t    frappe.call({\n// \t        method:'frappe.client.get',\n// \t        args:{\n// \t            doctype: 'Program Enrollment',\n// \t            filters:{\n// \t                       'name' :program_enroll\n\t                \n// \t                     }\n// \t            },\n// \t            callback: function (response){\n// \t                console.log(response.message);\n// \t               var Academic_year = response.message.academic_year;\n// \t               var Batch = response.message.student_batch_name;\n\t               \n// \t               console.log(Academic_year);\n// \t               console.log(Batch);\n// \t               frm.set_value('academic_year',Academic_year);\n// \t               frm.set_value('custom_batch',Batch);\n\n// \t            }\n\t            \n\t            \n\t        \n// \t                });\n\t                        \n//                                 }\n//                                 else{\n//                                     console.log(\"Program Enrollment Empty\");\n//                                 }\n\t    \n\t\n\t\n// \t                        }\n    \n    \n// });",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2024-01-10 15:42:03.486225",
  "module": "Education",
  "name": "Payment_Entry_Amount",
  "script": "frappe.ui.form.on('Payment Entry', {\n\tpaid_amount(frm) {\n\t    var amount = frm.doc.paid_amount;\n\t   // frm.set_value(\"allocated_amount\",amount)\n\t   frm.doc.references.forEach(function(row){\n\t       row.allocated_amount = amount;\n\t       \n\t   });\n\t  \n\t    \n\t    \n\t\t\n\t\t\n\t}\n})\n\n// references;",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Opportunity",
  "enabled": 1,
  "modified": "2024-02-28 16:26:51.649999",
  "module": "Education",
  "name": "Custom button",
  "script": "// frappe.ui.form.on('Student Applicant', {\n//     paid: function(frm) {\n//         var lead = frm.doc.custom_opp_name;\n//         console.log(\"Opportunity name:\", lead);\n\n//         // Update Opportunity\n//         frappe.call({\n//             method: \"frappe.client.get\",\n//             args: {\n//                 \"doctype\": \"Opportunity\",\n//                 \"name\": lead,\n//             },\n//             callback: function(response) {\n//                 var leadObj = response.message;\n\n//                 if (leadObj) {\n//                     console.log(\"Opportunity Status before update:\", leadObj.status);\n\n//                     // Update the 'status' field of the Opportunity\n//                     leadObj.status = \"Converted\";\n\n//                     // Save the changes to the Opportunity\n//                     frappe.call({\n//                         method: \"frappe.client.save\",\n//                         args: {\n//                             \"doc\": leadObj\n//                         },\n//                         callback: function(saveResponse) {\n//                             if (saveResponse.exc) {\n//                                 console.error(\"Error updating Opportunity Status:\", saveResponse.exc);\n//                             } else {\n//                                 console.log(\"Opportunity Status updated to 'Converted'\");\n//                                 // Save the current document after updating the Opportunity status\n//                                 frm.save();\n//                             }\n//                         }\n//                     });\n//                 } else {\n//                     console.error(\"Opportunity not found.\");\n//                 }\n//             }\n//         });\n//     }\n// });\n\n\n\n\n\n// ..........................................\n// function addCustomButton(frm) {\n//     // var lead = frm.doc.party_name;\n//     var c_partyname = frm.doc.custom_partyname;\n//     var Course = frm.doc.custom_course;\n//     var opp = frm.doc.name;\n\n//     var G_program;\n//     Course.forEach(function (i) {\n//         G_program = i.course;\n//     });\n//   if (lead){\n//     frappe.call({\n//         method: 'frappe.client.get',\n//         args: {\n//             'doctype': 'Lead',\n//             'name': c_partyname,\n//         },\n//         callback: function (response) {\n//             if (response.message) {\n//                 var leadObj = response.message;\n//                 var G_firstname = leadObj.first_name;\n//                 var G_middlename = leadObj.middle_name;\n//                 var G_lastname = leadObj.last_name;\n//                 var G_gender = leadObj.gender;\n//                 var G_source = leadObj.source;\n//                 var G_mobile_no = leadObj.mobile_no;\n//                 var G_email_id = leadObj.email_id;\n\n//                 frm.add_custom_button(__('Create Student Applicant'), function () {\n//                     frappe.new_doc('Student Applicant', {\n//                         \"first_name\": G_firstname,\n//                         \"middle_name\": G_middlename,\n//                         \"last_name\": G_lastname,\n//                         \"gender\": G_gender,\n//                         \"source\": G_source,\n//                         \"student_mobile_number\": G_mobile_no,\n//                         \"student_email_id\": G_email_id,\n//                         \"program\": G_program,\n//                         \"custom_lead\": c_partyname,\n//                         \"custom_opp_name\": opp\n//                     });\n//                 });\n\n//             } else {\n//                 frappe.msgprint(__('Lead not found.'));\n//             }\n//         }\n//     });\n// }\n// else{\n//     console.log( \"lead is missing\")\n// } \n// }\n\n\n// frappe.ui.form.on('Opportunity', {\n//     onload: function (frm) {\n//         addCustomButton(frm);\n//     },\n//     refresh: function (frm) {\n//         addCustomButton(frm);\n//     }\n// });\n\n\n\n// .............................................\n// function addCustomButton(frm) {\n//     var lead = frm.doc.party_name;\n//     var oo = frm.doc.party_name;\n//     var Course = frm.doc.custom_course;\n//     var opp = frm.doc.name;\n\n//     var G_program;\n//     Course.forEach(function (i) {\n//         G_program = i.course;\n//     });\n// //   if (lead){\n//     frappe.call({\n//         method: 'frappe.client.get',\n//         args: {\n//             'doctype': 'Lead',\n//             'name': lead,\n//         },\n//         callback: function (response) {\n//             if (response.message) {\n//                 var leadObj = response.message;\n//                 var G_firstname = leadObj.first_name;\n//                 var G_middlename = leadObj.middle_name;\n//                 var G_lastname = leadObj.last_name;\n//                 var G_gender = leadObj.gender;\n//                 var G_source = leadObj.source;\n//                 var G_mobile_no = leadObj.mobile_no;\n//                 var G_email_id = leadObj.email_id;\n\n//                 frm.add_custom_button(__('Create Student Applicant'), function () {\n//                     frappe.new_doc('Student Applicant', {\n//                         \"first_name\": G_firstname,\n//                         \"middle_name\": G_middlename,\n//                         \"last_name\": G_lastname,\n//                         \"gender\": G_gender,\n//                         \"source\": G_source,\n//                         \"student_mobile_number\": G_mobile_no,\n//                         \"student_email_id\": G_email_id,\n//                         \"program\": G_program,\n//                         \"custom_lead\": lead,\n//                         \"custom_opp_name\": opp\n//                     });\n//                 });\n\n//             } else {\n//                 frappe.msgprint(__('Lead not found.'));\n//             }\n//         }\n//     });\n// }\n// else{\n//     console.log( \"lead is missing\")\n// } \n// }\n\n\n// frappe.ui.form.on('Opportunity', {\n//     onload: function (frm) {\n//         addCustomButton(frm);\n//     },\n//     refresh: function (frm) {\n//         addCustomButton(frm);\n//     }\n// });\n\n\n// ........................\n\n// 888888888888888888888888888888888888888888888888888888\nfrappe.ui.form.on('Opportunity', {\n    refresh: function(frm) {\n        var lead = frm.doc.party_name;\n        var Course = frm.doc.custom_course;\n        var opp = frm.doc.name;\n        \n        var G_program ;\n        Course.forEach(function(i){\n            G_program = i.course\n        });\n    // if(lead){\n        frappe.call({\n            method: 'frappe.client.get',\n            args: {\n                'doctype': 'Lead',\n                'name': lead,\n            },\n            callback: function(response) {\n                if (response.message) {\n                    var leadObj = response.message;\n                    var G_firstname = leadObj.first_name;\n                    var G_middlename = leadObj.middle_name;\n                    var G_lastname = leadObj.last_name;\n                    var G_gender = leadObj.gender;\n                    var G_source = leadObj.source;\n                    var G_mobile_no = leadObj.mobile_no;\n                    var G_email_id = leadObj.email_id;\n                    console.log(G_firstname)\n                    console.log(G_middlename)\n                    console.log(G_lastname)\n                    console.log(G_gender)\n                    console.log(G_source)\n                    console.log(G_mobile_no)\n                    console.log(G_email_id)\n                    \n\n                    frm.add_custom_button(__('Create Student Applicant'), function() {\n                        // frm.set_value('status', 'Converted');\n                        \n                        frappe.new_doc('Student Applicant',{\n                        \"first_name\" : G_firstname,\n                        \"middle_name\":G_middlename,\n                        \"last_name\" : G_lastname,\n                        \"gender\" : G_gender,\n                        \"source\" : G_source,\n                        \"student_mobile_number\" : G_mobile_no,\n                        \"student_email_id\" : G_email_id,\n                        \"program\": G_program,\n                        \"custom_lead\": lead,\n                        \"custom_opp_name\": opp\n                    });\n                \n\n                    });\n    \n                } else {\n                    frappe.msgprint(__('Lead not found.'));\n                }\n            }\n        });\n    // }\n    // else{\n    //     console.log(\"lead missing\")\n    // }\n    }\n});\n// 888888888888888888888888888888888888888888888888888\n\n// ...................................................\n// frappe.ui.form.on('Opportunity', {\n//     refresh: function(frm) {\n//         var lead = frm.doc.party_name;\n//         var Course = frm.doc.custom_course;\n//         var G_program ;\n//         Course.forEach(function(i){\n//             G_program = i.course\n//         });\n        \n//         frappe.call({\n//             method: 'frappe.client.get',\n//             args: {\n//                 'doctype': 'Lead',\n//                 'name': lead,\n//             },\n//             callback: function(response) {\n//                 if (response.message) {\n//                     var leadObj = response.message;\n//                     var G_firstname = leadObj.first_name;\n//                     var G_middlename = leadObj.middle_name;\n//                     var G_lastname = leadObj.last_name;\n//                     var G_gender = leadObj.gender;\n//                     var G_source = leadObj.source;\n//                     var G_mobile_no = leadObj.mobile_no;\n//                     var G_email_id = leadObj.email_id;\n//                     console.log(G_firstname)\n//                     console.log(G_middlename)\n//                     console.log(G_lastname)\n//                     console.log(G_gender)\n//                     console.log(G_source)\n//                     console.log(G_mobile_no)\n//                     console.log(G_email_id)\n                    \n\n//                     frm.add_custom_button(__('Create Student Applicant'), function() {\n//                         frappe.new_doc('Student Applicant',{\n//                         \"first_name\" : G_firstname,\n//                         \"middle_name\":G_middlename,\n//                         \"last_name\" : G_lastname,\n//                         \"gender\" : G_gender,\n//                         \"source\" : G_source,\n//                         \"student_mobile_number\" : G_mobile_no,\n//                         \"student_email_id\" : G_email_id,\n//                         \"program\": G_program\n//                     });\n\n//                         // Save the new 'Student Applicant' document\n//                         student_Lead.save().then(function() {\n//                             // Optional: Show a success message\n//                             frappe.msgprint(__('Student Applicant created successfully.'));\n\n//                             // Optional: Reload the form to show the new 'Student Applicant' link\n//                             frm.reload_doc();\n//                         });\n//                     });\n//                 } else {\n//                     frappe.msgprint(__('Lead not found.'));\n//                 }\n//             }\n//         });\n//     }\n// });\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Applicant",
  "enabled": 1,
  "modified": "2024-03-01 17:19:18.893252",
  "module": "Education",
  "name": "Advance Payment",
  "script": "// ...................\nfrappe.ui.form.on('Student Applicant', {\n\trefresh(frm) {\n\t   stud = frm.doc.name;\n\t   Acc = frm.doc.custom_account;\n\t   \n\t    ac_name = frm.doc.custom_account\n        frm.add_custom_button(__('Go to Payment Entry'), function() {\n        frappe.new_doc('Payment Entry', {\n        \"payment_type\": \"Internal Transfer\",\n        \"paid_from\":Acc,\n        \"mode_of_payment\": \"\",\n        \"paid_to\":\"Cash - W\",\n        \"cost_center\":\"Main - W\"\n        \n        });\n        }).css({'background-color': '#007bff', 'color': 'white'});\n\n    }\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Payment Entry",
  "enabled": 1,
  "modified": "2024-02-01 10:55:14.077378",
  "module": "Education",
  "name": "AC filter",
  "script": "frappe.ui.form.on('Payment Entry', {\n    refresh(frm) {\n        frm.set_query('paid_from', function() {\n            return {\n                \"filters\": {\n                    \"is_group\":0,\n                    \n                }\n            };\n        });\n        \n            frm.set_query('paid_to', function() {\n            return {\n                \"filters\": {\n                    \"is_group\":0,\n                    \n                }\n            };\n        });\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Applicant",
  "enabled": 1,
  "modified": "2024-02-14 13:53:34.808925",
  "module": "Education",
  "name": "act_temp",
  "script": "frappe.ui.form.on('Student Applicant', {\n    custom_create_account: function(frm) {\n        if (frm.doc.custom_create_account === 1) {\n            var first = frm.doc.first_name || '';\n            var middle = frm.doc.middle_name || '';\n            var last = frm.doc.last_name || '';\n            var doc_name = frm.doc.name;\n            var last_five_digits = doc_name.slice(-5);\n            var lead_no = frm.doc.custom_lead;\n            var last_three_digits_lead = lead_no.slice(-3); // Extract last three digits from lead_no\n            var account_name = first.trim();\n            \n            // Append middle name if not empty\n            if (middle.trim() !== '') {\n                account_name += ' ' + middle.trim();\n            }\n            \n            // Append last name if not empty\n            if (last.trim() !== '') {\n                account_name += ' ' + last.trim();\n            }\n            \n            // Append last three digits of lead_no\n            account_name += ' - ' + last_three_digits_lead;\n            \n            // Check if the account already exists\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    doctype: 'Account',\n                    filters: { 'account_name': account_name }\n                },\n                callback: function(response) {\n                    if (response.message && response.message.length > 0) {\n                        // Account already exists, set the existing account to custom_account field\n                        frm.set_value('custom_account', response.message[0].name);\n                        frappe.msgprint(\"Account already exists with the name: \" + account_name + \". Setting existing account.\");\n                        // Save the document after a delay of 1 second\n                        setTimeout(function() {\n                            frm.save();\n                        }, 1000);\n                    } else {\n                        // Account doesn't exist, create a new one\n                        createNewAccount(account_name, frm);\n                    }\n                }\n            });\n        }\n    }\n});\n\nfunction createNewAccount(account_name, frm) {\n    var new_account = frappe.model.get_new_doc(\"Account\");\n    new_account.account_name = account_name;\n    new_account.parent_account = \"Temporary Accounts - W\";\n    new_account.account_type = \"\"; // Set your desired account type\n    frappe.db.insert(new_account).then(function(response) {\n        frappe.msgprint(\"New account created successfully: \" + response.name);\n        // Set the new account in the custom_account field\n        frm.set_value('custom_account', response.name);\n        // Save the document after a delay of 1 second\n        setTimeout(function() {\n            frm.save();\n        }, 1000);\n    }).catch(function(err) {\n        console.error(err);\n        frappe.msgprint(\"Failed to create account.\");\n    });\n}\n\n\n\n// ......................\n\n// frappe.ui.form.on('Student Applicant', {\n//     custom_create_account: function(frm) {\n//         if (frm.doc.custom_create_account === 1) {\n//             var first = frm.doc.first_name || '';\n//             var middle = frm.doc.middle_name || '';\n//             var last = frm.doc.last_name || '';\n//             var doc_name = frm.doc.name;\n//             var last_five_digits = doc_name.slice(-5);\n//             var lead_no = frm.doc.custom_lead;\n//             var last_three_digits_lead = lead_no.slice(-3); // Extract last three digits from lead_no\n//             var account_name = first.trim();\n            \n//             // Append middle name if not empty\n//             if (middle.trim() !== '') {\n//                 account_name += ' ' + middle.trim();\n//             }\n            \n//             // Append last name if not empty\n//             if (last.trim() !== '') {\n//                 account_name += ' ' + last.trim();\n//             }\n            \n//             // Append last three digits of lead_no\n//             account_name += ' ' + last_three_digits_lead;\n            \n//             // Check if the account already exists\n//             frappe.call({\n//                 method: 'frappe.client.get_list',\n//                 args: {\n//                     doctype: 'Account',\n//                     filters: { 'account_name': account_name }\n//                 },\n//                 callback: function(response) {\n//                     if (response.message && response.message.length > 0) {\n//                         // Account already exists, set the existing account to custom_account field\n//                         frm.set_value('custom_account', response.message[0].name);\n//                         frappe.msgprint(\"Account already exists with the name: \" + account_name + \". Setting existing account.\");\n//                         // Save the document after a delay of 1 second\n//                         setTimeout(function() {\n//                             frm.save();\n//                         }, 1000);\n//                     } else {\n//                         // Account doesn't exist, create a new one\n//                         createNewAccount(account_name, frm);\n//                     }\n//                 }\n//             });\n//         }\n//     }\n// });\n\n// function createNewAccount(account_name, frm) {\n//     var new_account = frappe.model.get_new_doc(\"Account\");\n//     new_account.account_name = account_name;\n//     new_account.parent_account = \"Temporary Accounts - W\";\n//     new_account.account_type = \"\"; // Set your desired account type\n//     frappe.db.insert(new_account).then(function(response) {\n//         frappe.msgprint(\"New account created successfully: \" + response.name);\n//         // Set the new account in the custom_account field\n//         frm.set_value('custom_account', response.name);\n//         // Save the document after a delay of 1 second\n//         setTimeout(function() {\n//             frm.save();\n//         }, 1000);\n//     }).catch(function(err) {\n//         console.error(err);\n//         frappe.msgprint(\"Failed to create account.\");\n//     });\n// }\n\n\n\n// // ...................\n// frappe.ui.form.on('Student Applicant', {\n//     custom_create_account: function(frm) {\n//         if (frm.doc.custom_create_account === 1) {\n//             var first = frm.doc.first_name || '';\n//             var middle = frm.doc.middle_name || '';\n//             var last = frm.doc.last_name || '';\n//             var doc_name = frm.doc.name;\n//             var last_five_digits = doc_name.slice(-5);\n//             var Id = parseInt(last_five_digits);\n            \n//             var account_name = first.trim();\n            \n//             // Append middle name if not empty\n//             if (middle.trim() !== '') {\n//                 account_name += ' ' + middle.trim();\n//             }\n            \n//             // Append last name if not empty\n//             if (last.trim() !== '') {\n//                 account_name += ' ' + last.trim();\n//             }\n            \n//             // Append Id\n//             account_name += ' ' + Id;\n            \n//             // Check if the account already exists\n//             frappe.call({\n//                 method: 'frappe.client.get_list',\n//                 args: {\n//                     doctype: 'Account',\n//                     filters: { 'account_name': account_name }\n//                 },\n//                 callback: function(response) {\n//                     if (response.message && response.message.length > 0) {\n//                         // Account already exists, set the existing account to custom_account field\n//                         frm.set_value('custom_account', response.message[0].name);\n//                         frappe.msgprint(\"Account already exists with the name: \" + account_name + \". Setting existing account.\");\n//                         // Save the document after a delay of 1 second\n//                         setTimeout(function() {\n//                             frm.save();\n//                         }, 1000);\n//                     } else {\n//                         // Account doesn't exist, create a new one\n//                         createNewAccount(account_name, frm);\n//                     }\n//                 }\n//             });\n//         }\n//     }\n// });\n\n// function createNewAccount(account_name, frm) {\n//     var new_account = frappe.model.get_new_doc(\"Account\");\n//     new_account.account_name = account_name;\n//     new_account.parent_account = \"Temporary Accounts - W\";\n//     new_account.account_type = \"\"; // Set your desired account type\n//     frappe.db.insert(new_account).then(function(response) {\n//         frappe.msgprint(\"New account created successfully: \" + response.name);\n//         // Set the new account in the custom_account field\n//         frm.set_value('custom_account', response.name);\n//         // Save the document after a delay of 1 second\n//         setTimeout(function() {\n//             frm.save();\n//         }, 1000);\n//     }).catch(function(err) {\n//         console.error(err);\n//         frappe.msgprint(\"Failed to create account.\");\n//     });\n// }\n\n\n// ................\n// frappe.ui.form.on('Student Applicant', {\n//     custom_create_account: function(frm) {\n//         if (frm.doc.custom_create_account === 1) {\n//             var first = frm.doc.first_name || '';\n//             var middle = frm.doc.middle_name || '';\n//             var last = frm.doc.last_name || '';\n//             var doc_name = frm.doc.name;\n//             var last_five_digits = doc_name.slice(-5);\n//             var Id = parseInt(last_five_digits);\n            \n//             var account_name = first.trim();\n            \n//             // Append middle name if not empty\n//             if (middle.trim() !== '') {\n//                 account_name += ' ' + middle.trim();\n//             }\n            \n//             // Append last name if not empty\n//             if (last.trim() !== '') {\n//                 account_name += ' ' + last.trim();\n//             }\n            \n//             // Append Id\n//             account_name += ' ' + Id;\n            \n//             // Check if the account already exists\n//             frappe.call({\n//                 method: 'frappe.client.get_list',\n//                 args: {\n//                     doctype: 'Account',\n//                     filters: { 'account_name': account_name }\n//                 },\n//                 callback: function(response) {\n//                     if (response.message && response.message.length > 0) {\n//                         // Account already exists, do something (e.g., display a message)\n//                         frappe.msgprint(\"Account already exists with the name: \" + account_name);\n//                     } else {\n//                         // Account doesn't exist, create a new one\n//                         createNewAccount(account_name, frm);\n//                     }\n//                 }\n//             });\n//         }\n//     }\n// });\n\n// function createNewAccount(account_name, frm) {\n//     var new_account = frappe.model.get_new_doc(\"Account\");\n//     new_account.account_name = account_name;\n//     new_account.parent_account = \"Temporary Accounts - W\";\n//     new_account.account_type = \"\"; // Set your desired account type\n//     frappe.db.insert(new_account).then(function(response) {\n//         frappe.msgprint(\"New account created successfully: \" + response.name);\n//         // Set the new account in the custom_account field\n//         frm.set_value('custom_account', response.name);\n//         // Save the document after a delay of 1 second if custom_account is not empty\n//         if (frm.doc.custom_account) {\n//             setTimeout(function() {\n//                 frm.save();\n//             }, 1000); // 1000 milliseconds = 1 second\n//         }\n//     }).catch(function(err) {\n//         console.error(err);\n//         frappe.msgprint(\"Failed to create account.\");\n//     });\n// }\n\n\n// ..............\n\n// frappe.ui.form.on('Student Applicant', {\n//     custom_create_account: function(frm) {\n//         if (frm.doc.custom_create_account === 1) {\n//             var first = frm.doc.first_name || '';\n//             var middle = frm.doc.middle_name || '';\n//             var last = frm.doc.last_name || '';\n//             var doc_name = frm.doc.name;\n//             var last_five_digits = doc_name.slice(-5);\n//             var Id = parseInt(last_five_digits);\n            \n//             var account_name = first.trim();\n            \n//             // Append middle name if not empty\n//             if (middle.trim() !== '') {\n//                 account_name += ' ' + middle.trim();\n//             }\n            \n//             // Append last name if not empty\n//             if (last.trim() !== '') {\n//                 account_name += ' ' + last.trim();\n//             }\n            \n//             // Append Id\n//             account_name += ' ' + Id;\n            \n//             var new_account = frappe.model.get_new_doc(\"Account\");\n//             new_account.account_name = account_name;\n//             new_account.parent_account = \"Temporary Accounts - W\";\n//             new_account.account_type = \"\"; // Set your desired account type\n//             frappe.db.insert(new_account).then(function(response) {\n//                 frappe.msgprint(\"New account created successfully: \" + response.name);\n//                 // Set the new account in the custom_account field\n//                 frm.set_value('custom_account', response.name);\n//                 // Save the document after a delay of 1 second if custom_account is not empty\n//                 if (frm.doc.custom_account) {\n//                     setTimeout(function() {\n//                         frm.save();\n//                     }, 1000); // 1000 milliseconds = 1 second\n//                 }\n//             }).catch(function(err) {\n//                 console.error(err);\n//                 frappe.msgprint(\"Failed to create account.\");\n//             });\n//         }\n//     }\n// });\n\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_Lead",
  "enabled": 1,
  "modified": "2024-03-01 16:54:29.734685",
  "module": "Education",
  "name": "C_btn",
  "script": "frappe.ui.form.on('C_Lead', {\n    refresh(frm) {\n        frm.add_custom_button(__('Create Opportunity'), function() {\n            frappe.new_doc('C_opportunity', {\n                'first_name': frm.doc.first_name,\n                'middle_name': frm.doc.middle_name,\n                'last_name': frm.doc.last_name,\n                'full_name': frm.doc.doc_name,  // Set this field according to your logic\n                'mob': frm.doc.mob,\n                // 'status': frm.doc.status,\n                \"source\":frm.doc.sourse,\n                'lead_id': frm.doc.name,\n                \"email\":frm.doc.email,\n                \"gender\":frm.doc.gender,\n                \"address\":frm.doc.address,\n                \"city\":frm.doc.city,\n                \n\n            });\n        // }).css({'background-color': 'green', 'color': 'white'});\n        }).css({'background-color': '#90EE90', 'color': 'white'});//light green\n\n    },\n});\n\n        // }).css({'background-color': '#808080', 'color': 'white'});\n        // }).css({'background-color': '#90EE90', 'color': 'white'});//light green\n        // }).css({'background-color': '#FFA07A', 'color': 'white'});//light red\n    // }).css({'background-color': '#ADD8E6', 'color': 'white'});//light blue\n        // }).css({'background-color': '#4CAF50', 'color': 'white'});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-02-17 15:15:14.073457",
  "module": "CRM",
  "name": "op_crs_amnt",
  "script": "frappe.ui.form.on('Program Enrollment Course', {\n\tcourse: function(frm,cdt,cdn) {\n\t    var n = locals[cdt][cdn];\n\t   var course = n.course;\n\t   console.log(course)\n\t   var amount = \"2000\";\n\t   \n\t   frappe.call({\n\t       method:\"advance\",\n\t       args:{ doctype:\"Fee Structure\",\n\t       name1:course\n\t       },\n\t       callback:function(response){\n\t           console.log(response)\n\t            var response_s=JSON.parse(response._server_messages);\n \n                        var x = JSON.parse(response_s[0]);\n                        // console.log(x.message); \n                        \n                        var M = x.message;\n                        console.log(M); \n\n\t           \n\t           \n\n\t           frm.set_value('payment_amount',amount )\n\t           frm.set_value('course_fee',M)\n\t   \n\n\t       }\n\t   });\n\t}\n});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_Lead",
  "enabled": 1,
  "modified": "2024-02-19 10:54:33.774107",
  "module": "CRM",
  "name": "C_LE_name_gen",
  "script": "frappe.ui.form.on('C_Lead', {\n\n    refresh: function(frm) {\n        \n    },\n\n    first_name: function(frm) {\n        updateFullName(frm);\n    },\n\n    middle_name: function(frm) {\n        updateFullName(frm);\n    },\n\n    last_name: function(frm) {\n        updateFullName(frm);\n    }\n});\n\nfunction updateFullName(frm) {\n    var first = frm.doc.first_name || \"\";\n    var middle = frm.doc.middle_name || \"\";\n    var last = frm.doc.last_name || \"\";\n\n    // Generate a random number between 1 and 1000\n    // var randomNum = 'STD-' + Math.floor(Math.random() * 1000);\n\n    var full_name = first;\n\n    if (middle) {\n        full_name += \" \" + middle;\n    }\n\n    full_name += \" \" + last;\n    console.log(full_name)\n    frm.set_value(\"full_name\",full_name)\n    frm.set_value(\"doc_name\", full_name);\n    \n\n    // frm.set_value('custom_student_full_name_', full_name.trim());\n    // Add the random number to the full name\n    // full_name += \" - \" + randomNum;\n\n    // frm.set_value('custom_full_name', full_name.trim());\n}\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-02-19 23:09:36.158780",
  "module": "CRM",
  "name": "C_op_name",
  "script": "frappe.ui.form.on('C_opportunity', {\n\trefresh(frm) {\n\t\tvar name = frm.doc.lead_id;\n\t\tfrm.set_value(\"d_name\",name)\n\t\t\n\t}\n})",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_Lead",
  "enabled": 1,
  "modified": "2024-03-01 16:57:04.296482",
  "module": "CRM",
  "name": "lead_dele_api",
  "script": "frappe.ui.form.on('C_Lead', {\n    refresh: function(frm) {\n        // Add a custom button to delete the document based on Full Name\n        frm.add_custom_button(__('Delete Document'), function() {\n            var full_name = frm.doc.name;\n            console.log(full_name);\n            \n            // Search for the document based on Full Name\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    'doctype': 'C_Lead', // Specify the correct doctype here\n                    'filters': {\n                        'name': full_name\n                    },\n                    'fields': ['name']\n                },\n                callback: function(response) {\n                    if (response.message && response.message.length > 0) {\n                        var doc_name = response.message[0].name;\n                        \n                        // Confirm with the user before deleting the document\n                        frappe.confirm(\n                            __('Are you sure you want to delete this document?'),\n                            function() {\n                                // If the user confirms, delete the document\n                                frappe.call({\n                                    method: 'frappe.client.delete',\n                                    args: {\n                                        'doctype': 'C_Lead',\n                                        'name': doc_name\n                                    },\n                                    callback: function(response) {\n                                        if (!response.exc) {\n                                            frappe.msgprint(__('Document deleted successfully.'));\n                                            // Redirect the user to the list view after deletion\n                                            frappe.set_route('List', frm.doctype);\n                                        } else {\n                                            frappe.msgprint(__('An error occurred while deleting the document.'));\n                                        }\n                                    }\n                                });\n                            }\n                        );\n                    } else {\n                        frappe.msgprint(__('Document not found.'));\n                    }\n                }\n            });\n        // }).css({'background-color': '#FF0000', 'color': 'white'});\n          }).css({'background-color': '#FFA07A', 'color': 'white'});//light red\n    }\n});\n        // }).css({'background-color': '#90EE90', 'color': 'white'});//light green\n        // }).css({'background-color': '#FFA07A', 'color': 'white'});//light red\n    // }).css({'background-color': '#ADD8E6', 'color': 'white'});//light blue\n        // }).css({'background-color': '#4CAF50', 'color': 'white'});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-03-01 16:44:43.938434",
  "module": "CRM",
  "name": "c_opp-dele",
  "script": "frappe.ui.form.on('C_opportunity', {\n    refresh: function(frm) {\n        // Add a custom button to delete the documents based on Full Name\n        frm.add_custom_button(__('Delete Documents'), function() {\n            var full_name = frm.doc.full_name;\n\n            // Search for the C_Lead document based on Full Name\n            frappe.call({\n                method: 'frappe.client.get_list',\n                args: {\n                    'doctype': 'C_Lead',\n                    'filters': {\n                        'full_name': full_name\n                    },\n                    'fields': ['name']\n                },\n                callback: function(response) {\n                    if (response.message && response.message.length > 0) {\n                        var c_lead_name = response.message[0].name;\n\n                        // Confirm with the user before deleting the documents\n                        frappe.confirm(\n                            __('Are you sure you want to delete these documents?'),\n                            function() {\n                                // If the user confirms, delete the C_opportunity document\n                                frappe.call({\n                                    method: 'frappe.client.delete',\n                                    args: {\n                                        'doctype': 'C_opportunity',\n                                        'name': frm.doc.name\n                                    },\n                                    callback: function(response) {\n                                        if (!response.exc) {\n                                            // Delete the related C_Lead document\n                                            frappe.call({\n                                                method: 'frappe.client.delete',\n                                                args: {\n                                                    'doctype': 'C_Lead',\n                                                    'name': c_lead_name\n                                                },\n                                                callback: function(response) {\n                                                    if (!response.exc) {\n                                                        frappe.msgprint(__('Documents deleted successfully.'));\n                                                        // Redirect the user to the list view after deletion\n                                                        frappe.set_route('List', frm.doctype);\n                                                    } else {\n                                                        frappe.msgprint(__('An error occurred while deleting the C_Lead document.'));\n                                                    }\n                                                }\n                                            });\n                                        } else {\n                                            frappe.msgprint(__('An error occurred while deleting the C_opportunity document.'));\n                                        }\n                                    }\n                                });\n                            }\n                        );\n                    } else {\n                        frappe.msgprint(__('C_Lead document not found.'));\n                    }\n                }\n            });\n        // }).css({'background-color': '#FF0000', 'color': 'white'});\n                }).css({'background-color': '#FFA07A', 'color': 'white'});//light red\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Time Table",
  "enabled": 1,
  "modified": "2024-02-27 16:41:03.051028",
  "module": "Education",
  "name": "HIDING _save_btn",
  "script": "frappe.ui.form.on('Student Time Table', {\n\n    refresh: function(frm) {\n        // Check if the user has the 'HR Manager' or 'Student' role\n        if (frappe.user.has_role(['HR Manager', 'Student'])) {\n            // Hide primary action buttons\n            frm.page.clear_primary_action();\n            // Hide all form action buttons\n            frm.page.clear_secondary_action();\n        }\n\n        // Check if the user has the 'Instructor' role\n        if (frappe.user.has_role('Instructor')) {\n            // If the user has the 'Instructor' role, perform specific actions\n            console.log('User is an Instructor');\n        }\n    }\n});\n\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Applicant",
  "enabled": 1,
  "modified": "2024-02-29 11:35:28.478409",
  "module": "Education",
  "name": "Converting_C_lead_&C_opportunity",
  "script": "\nfrappe.ui.form.on('Student Applicant', {\n    paid: function(frm) {\n        // Check if the 'paid' checkbox is checked (value equals 1)\n        if (frm.doc.paid === 1) {\n            frm.set_value('custom_status', 'CONVERTED');\n            \n            var lead = frm.doc.custom_opp_name;\n            console.log(\"Opportunity name:\", lead);\n\n            // Update Opportunity\n            frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    \"doctype\": \"C_opportunity\",\n                    \"name\": lead,\n                },\n                callback: function(response) {\n                    var leadObj = response.message;\n\n                    if (leadObj) {\n                        console.log(\"Opportunity Status before update:\", leadObj.status);\n\n                        // Update the 'status' field of the Opportunity\n                        leadObj.status = \"CONVERTED\";\n\n                        // Save the changes to the Opportunity\n                        frappe.call({\n                            method: \"frappe.client.save\",\n                            args: {\n                                \"doc\": leadObj\n                            },\n                            callback: function(saveResponse) {\n                                if (saveResponse.exc) {\n                                    console.error(\"Error updating Opportunity Status:\", saveResponse.exc);\n                                } else {\n                                    console.log(\"Opportunity Status updated to 'Converted'\");\n                                    // Save the current document after updating the Opportunity status\n                                    frm.save();\n                                }\n                            }\n                        });\n                    } else {\n                        console.error(\"Opportunity not found.\");\n                    }\n                }\n            });\n        } else {\n            console.log(\"The 'paid' checkbox is not checked. Skipping Opportunity update.\");\n        }\n    }\n});\n// .................\n\n// frappe.ui.form.on('Student Applicant', {\n//     paid: function(frm) {\n//         // Check if the 'paid' checkbox is checked (value equals 1)\n//         if (frm.doc.paid === 1) {\n//             var lead = frm.doc.custom_opp_name;\n//             console.log(\"Opportunity name:\", lead);\n\n//             // Update Opportunity\n//             frappe.call({\n//                 method: \"frappe.client.get\",\n//                 args: {\n//                     \"doctype\": \"C_opportunity\",\n//                     \"name\": lead,\n//                 },\n//                 callback: function(response) {\n//                     var leadObj = response.message;\n\n//                     if (leadObj) {\n//                         console.log(\"Opportunity Status before update:\", leadObj.status);\n\n//                         // Update the 'status' field of the Opportunity\n//                         leadObj.status = \"CONVERTED\";\n\n//                         // Save the changes to the Opportunity\n//                         frappe.call({\n//                             method: \"frappe.client.save\",\n//                             args: {\n//                                 \"doc\": leadObj\n//                             },\n//                             callback: function(saveResponse) {\n//                                 if (saveResponse.exc) {\n//                                     console.error(\"Error updating Opportunity Status:\", saveResponse.exc);\n//                                 } else {\n//                                     console.log(\"Opportunity Status updated to 'Converted'\");\n//                                     // Save the current document after updating the Opportunity status\n//                                     frm.save();\n//                                 }\n//                             }\n//                         });\n//                     } else {\n//                         console.error(\"Opportunity not found.\");\n//                     }\n//                 }\n//             });\n//         } else {\n//             console.log(\"The 'paid' checkbox is not checked. Skipping Opportunity update.\");\n//         }\n//     }\n// });\n// .......................",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Applicant",
  "enabled": 1,
  "modified": "2024-02-28 17:37:05.323770",
  "module": "Education",
  "name": "Converting_C_Lead",
  "script": "frappe.ui.form.on('Student Applicant', {\n    paid: function(frm) {\n        if (frm.doc.paid === 1) {\n            var lead1 = frm.doc.custom_lead;\n\n            frappe.call({\n                method: \"frappe.client.get\",\n                args: {\n                    \"doctype\": \"C_Lead\",\n                    \"name\": lead1,\n                },\n                callback: function(response) {\n                    var leadObj1 = response.message;\n\n                    if (leadObj1) {\n                        console.log(\"C_Lead Status before update:\", leadObj1.status);\n\n                        leadObj1.status = \"CONVERTED\";\n\n                        frappe.call({\n                            method: \"frappe.client.save\",\n                            args: {\n                                \"doc\": leadObj1\n                            },\n                            callback: function(saveResponse) {\n                                if (saveResponse.exc) {\n                                    console.error(\"Error updating C_Lead Status:\", saveResponse.exc);\n                                } else {\n                                    console.log(\"C_Lead Status updated to 'CONVERTED'\");\n                                    frm.save();\n                                }\n                            }\n                        });\n                    } else {\n                        console.error(\"C_Lead not found.\");\n                    }\n                }\n            });\n        } else {\n            console.log(\"The 'paid' checkbox is not checked. Skipping C_Lead update.\");\n        }\n    }\n});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_Lead",
  "enabled": 1,
  "modified": "2024-03-01 16:50:25.710976",
  "module": "Education",
  "name": "Not intrested",
  "script": "frappe.ui.form.on('C_Lead', {\n    refresh(frm) {\n        frm.add_custom_button(__(\"Not Interested\"), function() {\n            frm.set_value(\"status\", \"LOST\");\n            frm.save(); // Save the document\n        }).css({'background-color': '#808080', 'color': 'white'});\n    }\n});\n \n \n \n \n \n// ........\n// frappe.ui.form.on('C_Lead', {\n// \trefresh(frm) {\n// \t\tfrm.add_custom_button(__(\"Not Intrested\"),function(){\n// \t\t    frm.set_value(\"status\",LOST)\n\n//         }).css({'background-color': '#808080', 'color': 'white'});\n\n\n// \t}\n// })\n\n\n\n// \t\t}).css({'background-color': '#FF0000', 'color': 'white'});(red)\n        // }).css({'background-color': '#FFA500', 'color': 'white'});",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-03-01 14:41:40.468853",
  "module": "CRM",
  "name": "Not Intrested opp",
  "script": "frappe.ui.form.on('C_opportunity', {\n    refresh: function(frm) {\n        var lead = frm.doc.lead_id;\n\n        frm.add_custom_button(__('Not Interested'), function() {\n            // Set the status of the current opportunity document to \"LOST\"\n            frm.set_value('status', 'LOST');\n            \n            // Save the current opportunity document\n            frm.save();\n\n            // Update the status of the associated C_Lead document to \"LOST\"\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: 'C_Lead',\n                    name: lead\n                },\n                callback: function(response) {\n                    var leadObj = response.message;\n\n                    if (leadObj) {\n                        leadObj.status = 'LOST';\n\n                        // Save the changes to the C_Lead document\n                        frappe.call({\n                            method: 'frappe.client.save',\n                            args: {\n                                doc: leadObj\n                            },\n                            callback: function(saveResponse) {\n                                if (!saveResponse.exc) {\n                                    console.log('C_Lead status updated to \"LOST\"');\n                                } else {\n                                    console.error('Error updating C_Lead status:', saveResponse.exc);\n                                }\n                            }\n                        });\n                    } else {\n                        console.error('C_Lead not found.');\n                    }\n                }\n            });\n        }).css({'background-color': '#808080', 'color': 'white'});\n    }\n});\n\n\n\n\n// ....................\n        // }).css({'background-color': '#808080', 'color': 'white'});\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Student Applicant",
  "enabled": 1,
  "modified": "2024-03-01 16:37:14.838461",
  "module": "Education",
  "name": "not intrested stud app",
  "script": "frappe.ui.form.on('Student Applicant', {\n    refresh(frm) {\n        var opp_name = frm.doc.custom_opp_name;\n        var lead_name = frm.doc.custom_lead;\n\n        frm.add_custom_button(__(\"Not Interested\"), function() {\n            frm.set_value(\"custom_status\",\"LOST\")\n            frm.save()\n            frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: \"C_opportunity\",\n                    name: opp_name\n                },\n                callback: function(response) {\n                    var opp_obj = response.message;\n                    if (opp_obj) {\n                        console.log(opp_obj.status);\n                        opp_obj.status = \"LOST\";\n\n                        // Update the status of the C_opportunity document\n                        frappe.call({\n                            method: \"frappe.client.save\",\n                            args: {\n                                doc: opp_obj\n                            },\n                            callback: function(saveResponse) {\n                                if (!saveResponse.exc) {\n                                    console.log(\"C_opportunity status updated to LOST\");\n                                    //Next call to C_Lead \n                frappe.call({\n                method: 'frappe.client.get',\n                args: {\n                    doctype: \"C_Lead\",\n                    name: lead_name\n                },\n                callback: function(response) {\n                    var lead_obj = response.message;\n                    if (lead_obj) {\n                        console.log(lead_obj.status);\n                        lead_obj.status = \"LOST\";\n\n                        // Update the status of the C_opportunity document\n                        frappe.call({\n                            method: \"frappe.client.save\",\n                            args: {\n                                doc: lead_obj\n                            },\n                            callback: function(saveResponse) {\n                                if (!saveResponse.exc) {\n                                    console.log(\"C_Lead status updated to LOST\");\n                                }\n                                else{console.log(\"error updating C_lead :\",saveResponse.exc )}\n                            }\n                        });\n                    }\n                    else{console.log(\"C_Lead documwent not found\")}\n                }\n                                });\n                                    \n                                } else {\n                                    console.log(\"Error updating C_opportunity:\", saveResponse.exc);\n                                }\n                            }\n                        });\n                    } else {\n                        console.log(\"C_opportunity document not found.\");\n                    }\n                }\n            });\n        }).css({'background-color': '#808080', 'color': 'white'});\n        // }).css({'background-color': '#90EE90', 'color': 'white'});//light green\n        // }).css({'background-color': '#FFA07A', 'color': 'white'});//light red\n    // }).css({'background-color': '#ADD8E6', 'color': 'white'});//light blue\n        // }).css({'background-color': '#4CAF50', 'color': 'white'});\n\n\n\n\n    }\n});\n\n\n// ...................\n// frappe.ui.form.on('C_opportunity', {\n//     refresh: function(frm) {\n//             frappe.call({\n//                 method: 'frappe.client.get',\n//                 args: {\n//                     doctype: 'C_Lead',\n//                     name: lead\n//                 },\n//                 callback: function(response) {\n//                     var leadObj = response.message;\n\n//                     if (leadObj) {\n//                         leadObj.status = 'LOST';\n\n//                         // Save the changes to the C_Lead document\n//                         frappe.call({\n//                             method: 'frappe.client.save',\n//                             args: {\n//                                 doc: leadObj\n//                             },\n//                             callback: function(saveResponse) {\n//                                 if (!saveResponse.exc) {\n//                                     console.log('C_Lead status updated to \"LOST\"');\n//                                 } else {\n//                                     console.error('Error updating C_Lead status:', saveResponse.exc);\n//                                 }\n//                             }\n//                         });\n//                     } else {\n//                         console.error('C_Lead not found.');\n//                     }\n//                 }\n//             });\n//         }).css({'background-color': '#808080', 'color': 'white'});\n//     }\n// });\n\n\n\n\n// ....................\n        // }).css({'background-color': '#808080', 'color': 'white'});\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_Lead",
  "enabled": 1,
  "modified": "2024-03-01 16:57:36.547852",
  "module": "CRM",
  "name": "T_b",
  "script": "frappe.ui.form.on('C_Lead', {\n    refresh(frm) {\n        frm.add_custom_button(__('Note'), function() {\n            frappe.new_doc('ToDo', {\n                \"status\":\"Open\",\n                \"allocated_to\":\"\"\n            });\n        }).css({'background-color': '#000080', 'color': 'white'});\n    },\n});\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-03-01 16:43:01.544057",
  "module": "CRM",
  "name": "T_o_note",
  "script": "frappe.ui.form.on('C_opportunity', {\n\trefresh(frm) {\n\t\t        frm.add_custom_button(__('Note'), function() {\n            frappe.new_doc('ToDo', {\n                \"status\":\"Open\",\n                \"allocated_to\":\"\"\n            });\n        }).css({'background-color': '#000080', 'color': 'white'});\n            // }).css({'background-color': '#ADD8E6', 'color': 'white'});//light blue\n\n\t}\n})\n\n// ...................\n\n",
  "view": "Form"
 },
 {
  "_liked_by": "[\"Administrator\"]",
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "C_opportunity",
  "enabled": 1,
  "modified": "2024-03-01 16:39:24.710541",
  "module": "CRM",
  "name": "C_o to Std",
  "script": "frappe.ui.form.on('C_opportunity', {\n\trefresh(frm) {\n\t   var Course = frm.doc.course;\n\t   var G_program ;\n        Course.forEach(function(i){\n            G_program = i.course;\n        });\n                        frm.add_custom_button(__('Create Student Applicant'), function() {\n                        \n                        frappe.new_doc('Student Applicant',{\n                        \"first_name\" : frm.doc.first_name,\n                        \"middle_name\":frm.doc.middle_name,\n                        \"last_name\" : frm.doc.last_name,\n                        // \"gender\" : \"\",\n                        // \"source\" : \"\",\n                        \"student_mobile_number\" : frm.doc.mob,\n                        \"student_email_id\" : frm.doc.email,\n                        \"program\": G_program,\n                        \"custom_lead\": frm.doc.lead_id,\n                        \"custom_opp_name\": frm.doc.name,\n                        \"address_line_1\": frm.doc.address,\n                        \"city\": frm.doc.city,\n                        \"gender\":frm.doc.gender,\n                    });\n                \n\n                    // }).css({'background-color': 'green', 'color': 'white'});\n                            }).css({'background-color': '#90EE90', 'color': 'white'});//light green\n\n    }\n});\n\n",
  "view": "Form"
 }
]